{"ast":null,"code":"var _jsxFileName = \"/home/shruti-mokariya/Desktop/react/hello/reactpractice/src/challanges/challenge2.js\";\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Challenge2 = () => {\n  var _s = $RefreshSig$();\n  function Timer() {\n    _s();\n    const [timer, setTimer] = useState(0);\n    const [intervalId, setintervalId] = useState(null);\n    let start = {\n      padding: \"25px\",\n      backgroundColor: \"green\",\n      textAlign: \"center\"\n    };\n    let stop = {\n      padding: \"25px\",\n      backgroundColor: \"red\",\n      textAlign: \"center\"\n    };\n    let reset = {\n      padding: \"25px\",\n      backgroundColor: \"yellow\",\n      textAlign: \"center\"\n    };\n    const starttimer = () => {\n      if (!intervalId) {\n        const id = setInterval(() => {\n          setTimer(count => count + 1);\n        }, 1000);\n        setintervalId(id);\n      }\n    };\n    const stoptimer = () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n        setintervalId(null);\n      }\n    };\n    const resettimer = () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n      setTimer(0);\n      setintervalId(null);\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"400px\",\n          fontSize: \"30px\"\n        },\n        children: [timer, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: start,\n          onClick: starttimer,\n          children: \" Start \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: stop,\n          onClick: stoptimer,\n          children: \" Stop \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: reset,\n          onClick: resettimer,\n          children: \" Reset \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n    //******************************alternative**************************************************************\n    // const [timer, setTimer] = useState(0);\n\n    // const startTimer = () => {\n    //   window.mTimer = setInterval(() => {\n    //     setTimer((timer) => timer + 1);\n    //   }, 1000);\n    // };\n    // const stopTimer = () => {\n    //   clearInterval(window.mTimer);\n    // };\n    // const resetTimer = () => {\n    //   clearInterval(window.mTimer);\n    //   setTimer(0);\n    // };\n    // return (\n    //   <div className=\"container\">\n    //     <h1>Timer</h1>\n    //     <span>{Math.trunc(timer / 60)} mins </span>\n    //     <span>{timer % 60} secs</span>\n    //     <div>\n    //       <button onClick={startTimer}>Start</button>\n    //       <button onClick={stopTimer}>Stop</button>\n    //       <button onClick={resetTimer}>Reset</button>\n    //     </div>\n    //   </div>\n    // );\n  }\n  _s(Timer, \"8ulIw2QNz5IYdFXDZ16Lbya8Sj0=\");\n  Timer();\n};\n_c = Challenge2;\nexport default Challenge2;\nvar _c;\n$RefreshReg$(_c, \"Challenge2\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Challenge2","_s","$RefreshSig$","Timer","timer","setTimer","intervalId","setintervalId","start","padding","backgroundColor","textAlign","stop","reset","starttimer","id","setInterval","count","stoptimer","clearInterval","resettimer","children","style","marginTop","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/shruti-mokariya/Desktop/react/hello/reactpractice/src/challanges/challenge2.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\n\nconst Challenge2 = () => {\n    function Timer() {\n      const [timer, setTimer] = useState(0);\n      const [intervalId, setintervalId] = useState(null);\n      let start = {\n        padding: \"25px\",\n        backgroundColor: \"green\",\n        textAlign: \"center\"\n      }\n      let stop = {\n        padding: \"25px\",\n        backgroundColor: \"red\",\n        textAlign: \"center\"\n      }\n      let reset = {\n        padding: \"25px\",\n        backgroundColor: \"yellow\",\n        textAlign: \"center\"\n      }\n  \n      const starttimer = () => {\n        if (!intervalId) {\n          const id = setInterval(() => {\n            setTimer((count) => (count + 1));\n          }, 1000);\n          setintervalId(id);\n        }\n      };\n      const stoptimer = () => {\n        if (intervalId) {\n          clearInterval(intervalId);\n          setintervalId(null);\n        }\n      }\n      const resettimer = () => {\n        if (intervalId) {\n          clearInterval(intervalId);\n        }\n        setTimer(0);\n        setintervalId(null);\n      }\n      return (\n        <>\n          <div style={{ textAlign: \"center\", marginTop: \"400px\", fontSize: \"30px\" }}>{timer} seconds</div>\n          <div style={{ textAlign: \"center\" }}>\n            <button style={start} onClick={starttimer}> Start </button>\n            <button style={stop} onClick={stoptimer}> Stop </button>\n            <button style={reset} onClick={resettimer}> Reset </button>\n          </div>\n        </>\n      )\n      //******************************alternative**************************************************************\n      // const [timer, setTimer] = useState(0);\n  \n      // const startTimer = () => {\n      //   window.mTimer = setInterval(() => {\n      //     setTimer((timer) => timer + 1);\n      //   }, 1000);\n      // };\n      // const stopTimer = () => {\n      //   clearInterval(window.mTimer);\n      // };\n      // const resetTimer = () => {\n      //   clearInterval(window.mTimer);\n      //   setTimer(0);\n      // };\n      // return (\n      //   <div className=\"container\">\n      //     <h1>Timer</h1>\n      //     <span>{Math.trunc(timer / 60)} mins </span>\n      //     <span>{timer % 60} secs</span>\n      //     <div>\n      //       <button onClick={startTimer}>Start</button>\n      //       <button onClick={stopTimer}>Stop</button>\n      //       <button onClick={resetTimer}>Reset</button>\n      //     </div>\n      //   </div>\n      // );\n    }\n    Timer();\n  }\n  export default Challenge2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}