{"ast":null,"code":"var _jsxFileName = \"/home/shruti-mokariya/Desktop/react/hello/reactpractice/src/challanges/challenge3.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Challenge3 = () => {\n  _s();\n  // function ToDo() {\n  const [todoList, setTodoList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const addItem = () => {\n    if (input.length) {\n      const item = {\n        id: i => i === 0 ? i : i + 1,\n        todo: input,\n        isCompleted: false\n      };\n      setTodoList([...todoList, item]);\n      setInput(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"beige\",\n      width: \"500px\",\n      height: \"80vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter City\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: todoList.map(({\n          id,\n          todo\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          id: id,\n          children: [todo, console.log(todoList)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n  // }\n  // ToDo();\n};\n_s(Challenge3, \"WlepfB3GuQHDW8BJiMditg0zJ60=\");\n_c = Challenge3;\nexport default Challenge3;\nvar _c;\n$RefreshReg$(_c, \"Challenge3\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Challenge3","_s","todoList","setTodoList","input","setInput","addItem","length","item","id","i","todo","isCompleted","style","backgroundColor","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","map","console","log","_c","$RefreshReg$"],"sources":["/home/shruti-mokariya/Desktop/react/hello/reactpractice/src/challanges/challenge3.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\n\nconst Challenge3 = ()=> {\n    // function ToDo() {\n      const [todoList, setTodoList] = useState([]);\n      const [input, setInput] = useState(\"\");\n  \n      const addItem = () => {\n        if (input.length) {\n          const item = { id: (i) => (i === 0 ? i : i + 1), todo: input, isCompleted: false };\n          setTodoList([...todoList, item]);\n          setInput(\"\");\n        }\n      };\n      return (\n        <div style={{backgroundColor:\"beige\",width:\"500px\",height:\"80vh\"}}>\n          <h2>Todo List</h2>\n          <div>\n            <input\n              placeholder=\"Enter City\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n            />\n            <button onClick={addItem}>Add</button>\n          </div>\n  \n          <div>\n            <ul>\n              {todoList.map(({ id, todo }) => (\n                <li id={id}>\n                  {todo}\n                  {console.log(todoList)}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      );\n    // }\n    // ToDo();\n  }\n  export default Challenge3;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACpB;EACE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIF,KAAK,CAACG,MAAM,EAAE;MAChB,MAAMC,IAAI,GAAG;QAAEC,EAAE,EAAGC,CAAC,IAAMA,CAAC,KAAK,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAE;QAAEC,IAAI,EAAEP,KAAK;QAAEQ,WAAW,EAAE;MAAM,CAAC;MAClFT,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,IAAI,CAAC,CAAC;MAChCH,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EACD,oBACEN,OAAA;IAAKc,KAAK,EAAE;MAACC,eAAe,EAAC,OAAO;MAACC,KAAK,EAAC,OAAO;MAACC,MAAM,EAAC;IAAM,CAAE;IAAAC,QAAA,gBAChElB,OAAA;MAAAkB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBtB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QACEuB,WAAW,EAAC,YAAY;QACxBC,KAAK,EAAEnB,KAAM;QACboB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFtB,OAAA;QAAQ4B,OAAO,EAAErB,OAAQ;QAAAW,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAENtB,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAAkB,QAAA,EACGf,QAAQ,CAAC0B,GAAG,CAAC,CAAC;UAAEnB,EAAE;UAAEE;QAAK,CAAC,kBACzBZ,OAAA;UAAIU,EAAE,EAAEA,EAAG;UAAAQ,QAAA,GACRN,IAAI,EACJkB,OAAO,CAACC,GAAG,CAAC5B,QAAQ,CAAC;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;EAEV;EACA;AACF,CAAC;AAAApB,EAAA,CAtCGD,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAuCd,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}