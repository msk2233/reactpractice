{"ast":null,"code":"var _jsxFileName = \"/home/shruti-mokariya/Desktop/react/hello/reactpractice/src/challanges/challenge2.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Challenge2 = () => {\n  _s();\n  const [timer, setTimer] = useState(0);\n  const [intervalId, setintervalId] = useState(null);\n  let start = {\n    padding: \"25px\",\n    backgroundColor: \"green\",\n    textAlign: \"center\"\n  };\n  let stop = {\n    padding: \"25px\",\n    backgroundColor: \"red\",\n    textAlign: \"center\"\n  };\n  let reset = {\n    padding: \"25px\",\n    backgroundColor: \"yellow\",\n    textAlign: \"center\"\n  };\n  const starttimer = () => {\n    if (!intervalId) {\n      console.log(\"on set timer \", intervalId);\n      const id = setInterval(() => {\n        setTimer(count => count + 1);\n      }, 1000);\n      setintervalId(id);\n    }\n  };\n  const stoptimer = () => {\n    if (intervalId) {\n      console.log(\"on set timer \", intervalId);\n      clearInterval(intervalId);\n      setintervalId(null);\n    }\n  };\n  const resettimer = () => {\n    if (intervalId) {\n      console.log(\"on set timer \", intervalId);\n      clearInterval(intervalId);\n    }\n    setTimer(0);\n    setintervalId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"400px\",\n        fontSize: \"30px\"\n      },\n      children: [timer, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: start,\n        onClick: starttimer,\n        children: \" Start \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: stop,\n        onClick: stoptimer,\n        children: \" Stop \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reset,\n        onClick: resettimer,\n        children: \" Reset \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n  //******************************alternative**************************************************************\n  // function Timer() {\n  // const [timer, setTimer] = useState(0);\n\n  // const startTimer = () => {\n  //   window.mTimer = setInterval(() => {\n  //     setTimer((timer) => timer + 1);\n  //   }, 1000);\n  // };\n  // const stopTimer = () => {\n  //   clearInterval(window.mTimer);\n  // };\n  // const resetTimer = () => {\n  //   clearInterval(window.mTimer);\n  //   setTimer(0);\n  // };\n  // return (\n  //   <div className=\"container\">\n  //     <h1>Timer</h1>\n  //     <span>{Math.trunc(timer / 60)} mins </span>\n  //     <span>{timer % 60} secs</span>\n  //     <div>\n  //       <button onClick={startTimer}>Start</button>\n  //       <button onClick={stopTimer}>Stop</button>\n  //       <button onClick={resetTimer}>Reset</button>\n  //     </div>\n  //   </div>\n  // );\n  // }\n  // Timer();\n};\n_s(Challenge2, \"8ulIw2QNz5IYdFXDZ16Lbya8Sj0=\");\n_c = Challenge2;\nexport default Challenge2;\nvar _c;\n$RefreshReg$(_c, \"Challenge2\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Challenge2","_s","timer","setTimer","intervalId","setintervalId","start","padding","backgroundColor","textAlign","stop","reset","starttimer","console","log","id","setInterval","count","stoptimer","clearInterval","resettimer","children","style","marginTop","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/shruti-mokariya/Desktop/react/hello/reactpractice/src/challanges/challenge2.js"],"sourcesContent":["import React from 'react';\nimport { useState } from \"react\";\n\nconst Challenge2 = () => {\n      const [timer, setTimer] = useState(0);\n      const [intervalId, setintervalId] = useState(null);\n      let start = {\n        padding: \"25px\",\n        backgroundColor: \"green\",\n        textAlign: \"center\"\n      }\n      let stop = {\n        padding: \"25px\",\n        backgroundColor: \"red\",\n        textAlign: \"center\"\n      }\n      let reset = {\n        padding: \"25px\",\n        backgroundColor: \"yellow\",\n        textAlign: \"center\"\n      }\n  \n      const starttimer = () => {\n        if (!intervalId) {\n          console.log(\"on set timer \" ,intervalId);\n          const id = setInterval(() => {\n            setTimer((count) => (count + 1));\n          }, 1000);\n          setintervalId(id);\n        }\n      };\n      const stoptimer = () => {\n        if (intervalId) {\n          console.log(\"on set timer \" ,intervalId);\n          clearInterval(intervalId);\n          setintervalId(null);\n        }\n      }\n      const resettimer = () => {\n        if (intervalId) {\n          console.log(\"on set timer \" ,intervalId);\n          clearInterval(intervalId);\n        }\n        setTimer(0);\n        setintervalId(null);\n      }\n      return (\n        <>\n          <div style={{ textAlign: \"center\", marginTop: \"400px\", fontSize: \"30px\" }}>{timer} seconds</div>\n          <div style={{ textAlign: \"center\" }}>\n            <button style={start} onClick={starttimer}> Start </button>\n            <button style={stop} onClick={stoptimer}> Stop </button>\n            <button style={reset} onClick={resettimer}> Reset </button>\n          </div>\n        </>\n      )\n      //******************************alternative**************************************************************\n      // function Timer() {\n      // const [timer, setTimer] = useState(0);\n  \n      // const startTimer = () => {\n      //   window.mTimer = setInterval(() => {\n      //     setTimer((timer) => timer + 1);\n      //   }, 1000);\n      // };\n      // const stopTimer = () => {\n      //   clearInterval(window.mTimer);\n      // };\n      // const resetTimer = () => {\n      //   clearInterval(window.mTimer);\n      //   setTimer(0);\n      // };\n      // return (\n      //   <div className=\"container\">\n      //     <h1>Timer</h1>\n      //     <span>{Math.trunc(timer / 60)} mins </span>\n      //     <span>{timer % 60} secs</span>\n      //     <div>\n      //       <button onClick={startTimer}>Start</button>\n      //       <button onClick={stopTimer}>Stop</button>\n      //       <button onClick={resetTimer}>Reset</button>\n      //     </div>\n      //   </div>\n      // );\n    // }\n    // Timer();\n  }\n  export default Challenge2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}