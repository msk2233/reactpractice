{"ast":null,"code":"var _jsxFileName = \"/home/shruti-mokariya/Desktop/react/hello/reactpractice/src/challanges/challenge9.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function useFetch(url) {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    fetch(url).then(res => res.json()).then(data => {\n      setData(data);\n      setError(null);\n      setLoading(false);\n    }).catch(e => {\n      console.warn(e.message);\n      setError(\"Error fetching data. Try again.\");\n      setLoading(false);\n    });\n  }, [url]);\n  return {\n    loading,\n    data,\n    error\n  };\n}\n_s(useFetch, \"3ZzU/bpgnt1jKXqVMjKABjGi/lY=\");\nconst postIds = [1, 2, 3, 4, 5, 6, 7, 8];\nexport default async function Challenge9() {\n  _s2();\n  const [index, setIndex] = useState(0);\n  const {\n    loading,\n    data: post,\n    error\n  } = useFetch(`https://jsonplaceholder.typicode.com/posts/${postIds[index]}`);\n  const incrementIndex = () => {\n    setIndex(i => i === postIds.length - 1 ? i : i + 1);\n  };\n  if (loading === true) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementIndex,\n        children: \"Next Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), index === postIds.length - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No more posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementIndex,\n      children: \"Next Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n// function useFetch(url) {\n//     const [loading, setLoading] = useState(true);\n//     const [data, setData] = useState(null);\n//     const [error, setError] = useState(null);\n\n//     useEffect(() => {\n//       setLoading(true);\n\n//       fetch(url)\n//         .then((res) => res.json())\n//         .then((data) => {\n//           setData(data);\n//           setError(null);\n//           setLoading(false);\n//         })\n//         .catch((e) => {\n//           console.warn(e.message);\n//           setError(\"Error fetching data. Try again.\");\n//           setLoading(false);\n//         });\n//     }, [url]);\n\n//     return { loading, data, error };\n//   }\n\n//   const postIds = [1, 2, 3, 4, 5, 6, 7, 8];\n\n//   export default function Challenge9() {\n//     const [index, setIndex] = useState(0);\n\n//     const { loading, data: post, error } = useFetch(\n//       `https://jsonplaceholder.typicode.com/posts/${postIds[index]}`\n//     );\n\n//     const incrementIndex = () => {\n//       setIndex((i) => (i === postIds.length - 1 ? i : i + 1));\n//     };\n\n//     if (loading === true) {\n//       return <p>Loading</p>;\n//     }\n\n//     if (error) {\n//       return (\n//         <div>\n//           <p>{error}</p>\n//           <button onClick={incrementIndex}>Next Post</button>\n//         </div>\n//       );\n//     }\n\n//     return (\n//       <div className=\"App\">\n//         <h1>{post.title}</h1>\n//         <p>{post.body}</p>\n//         {error && <p>{error}</p>}\n//         {index === postIds.length - 1 ? (\n//           <p>No more posts</p>\n//         ) : (\n//           <button onClick={incrementIndex}>Next Post</button>\n//         )}\n//       </div>\n//     );\n//   }\n_s2(Challenge9, \"cFfH4dP2z6Xx4EpDAHNd/9l5FCc=\", false, function () {\n  return [useFetch];\n});\n_c = Challenge9;\nvar _c;\n$RefreshReg$(_c, \"Challenge9\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","useFetch","url","_s","loading","setLoading","data","setData","error","setError","fetch","then","res","json","catch","e","console","warn","message","postIds","Challenge9","_s2","index","setIndex","post","incrementIndex","i","length","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","onClick","className","title","body","_c","$RefreshReg$"],"sources":["/home/shruti-mokariya/Desktop/react/hello/reactpractice/src/challanges/challenge9.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\n\nasync function useFetch(url) {\n\n    const [loading, setLoading] = useState(true);\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setLoading(true);\n\n        fetch(url)\n            .then((res) => res.json())\n            .then((data) => {\n                setData(data);\n                setError(null);\n                setLoading(false);\n            })\n            .catch((e) => {\n                console.warn(e.message);\n                setError(\"Error fetching data. Try again.\");\n                setLoading(false);\n            });\n    }, [url]);\n\n    return { loading, data, error };\n}\nconst postIds = [1, 2, 3, 4, 5, 6, 7, 8];\nexport default async  function Challenge9() {\n    const [index, setIndex] = useState(0);\n\n  const { loading, data: post, error } = useFetch(\n    `https://jsonplaceholder.typicode.com/posts/${postIds[index]}`\n  );\n\n  const incrementIndex = () => {\n    setIndex((i) => (i === postIds.length - 1 ? i : i + 1));\n  };\n\n  if (loading === true) {\n    return <p>Loading</p>;\n  }\n\n  if (error) {\n    return (\n      <Fragment>\n        <p>{error}</p>\n        <button onClick={incrementIndex}>Next Post</button>\n      </Fragment>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>{post.title}</h1>\n      <p>{post.body}</p>\n      {error && <p>{error}</p>}\n      {index === postIds.length - 1 ? (\n        <p>No more posts</p>\n      ) : (\n        <button onClick={incrementIndex}>Next Post</button>\n      )}\n    </div>\n  );\n}\n\n\n// function useFetch(url) {\n//     const [loading, setLoading] = useState(true);\n//     const [data, setData] = useState(null);\n//     const [error, setError] = useState(null);\n  \n//     useEffect(() => {\n//       setLoading(true);\n  \n//       fetch(url)\n//         .then((res) => res.json())\n//         .then((data) => {\n//           setData(data);\n//           setError(null);\n//           setLoading(false);\n//         })\n//         .catch((e) => {\n//           console.warn(e.message);\n//           setError(\"Error fetching data. Try again.\");\n//           setLoading(false);\n//         });\n//     }, [url]);\n  \n//     return { loading, data, error };\n//   }\n  \n//   const postIds = [1, 2, 3, 4, 5, 6, 7, 8];\n  \n//   export default function Challenge9() {\n//     const [index, setIndex] = useState(0);\n  \n//     const { loading, data: post, error } = useFetch(\n//       `https://jsonplaceholder.typicode.com/posts/${postIds[index]}`\n//     );\n  \n//     const incrementIndex = () => {\n//       setIndex((i) => (i === postIds.length - 1 ? i : i + 1));\n//     };\n  \n//     if (loading === true) {\n//       return <p>Loading</p>;\n//     }\n  \n//     if (error) {\n//       return (\n//         <div>\n//           <p>{error}</p>\n//           <button onClick={incrementIndex}>Next Post</button>\n//         </div>\n//       );\n//     }\n  \n//     return (\n//       <div className=\"App\">\n//         <h1>{post.title}</h1>\n//         <p>{post.body}</p>\n//         {error && <p>{error}</p>}\n//         {index === postIds.length - 1 ? (\n//           <p>No more posts</p>\n//         ) : (\n//           <button onClick={incrementIndex}>Next Post</button>\n//         )}\n//       </div>\n//     );\n//   }\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}