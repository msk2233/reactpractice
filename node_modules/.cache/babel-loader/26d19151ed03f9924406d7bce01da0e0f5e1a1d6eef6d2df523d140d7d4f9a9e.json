{"ast":null,"code":"var _jsxFileName = \"/home/shruti-mokariya/Desktop/react/hello/reactpractice/src/challanges/challenge2.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexports.challenge2 = () => {\n  var _s = $RefreshSig$();\n  function Timer() {\n    _s();\n    const [timer, setTimer] = useState(0);\n    const [intervalId, setintervalId] = useState(null);\n    let start = {\n      padding: \"25px\",\n      backgroundColor: \"green\",\n      textAlign: \"center\"\n    };\n    let stop = {\n      padding: \"25px\",\n      backgroundColor: \"red\",\n      textAlign: \"center\"\n    };\n    let reset = {\n      padding: \"25px\",\n      backgroundColor: \"yellow\",\n      textAlign: \"center\"\n    };\n    const starttimer = () => {\n      if (!intervalId) {\n        const id = setInterval(() => {\n          setTimer(count => count + 1);\n        }, 1000);\n        setintervalId(id);\n      }\n    };\n    const stoptimer = () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n        setintervalId(null);\n      }\n    };\n    const resettimer = () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n      setTimer(0);\n      setintervalId(null);\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"400px\",\n          fontSize: \"30px\"\n        },\n        children: [timer, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: start,\n          onClick: starttimer,\n          children: \" Start \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: stop,\n          onClick: stoptimer,\n          children: \" Stop \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: reset,\n          onClick: resettimer,\n          children: \" Reset \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n    //******************************alternative**************************************************************\n    // const [timer, setTimer] = useState(0);\n\n    // const startTimer = () => {\n    //   window.mTimer = setInterval(() => {\n    //     setTimer((timer) => timer + 1);\n    //   }, 1000);\n    // };\n    // const stopTimer = () => {\n    //   clearInterval(window.mTimer);\n    // };\n    // const resetTimer = () => {\n    //   clearInterval(window.mTimer);\n    //   setTimer(0);\n    // };\n    // return (\n    //   <div className=\"container\">\n    //     <h1>Timer</h1>\n    //     <span>{Math.trunc(timer / 60)} mins </span>\n    //     <span>{timer % 60} secs</span>\n    //     <div>\n    //       <button onClick={startTimer}>Start</button>\n    //       <button onClick={stopTimer}>Stop</button>\n    //       <button onClick={resetTimer}>Reset</button>\n    //     </div>\n    //   </div>\n    // );\n  }\n  _s(Timer, \"8ulIw2QNz5IYdFXDZ16Lbya8Sj0=\");\n};","map":{"version":3,"names":["exports","challenge2","_s","$RefreshSig$","Timer","timer","setTimer","useState","intervalId","setintervalId","start","padding","backgroundColor","textAlign","stop","reset","starttimer","id","setInterval","count","stoptimer","clearInterval","resettimer","_jsxDEV","_Fragment","children","style","marginTop","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/home/shruti-mokariya/Desktop/react/hello/reactpractice/src/challanges/challenge2.js"],"sourcesContent":["\nexports.challenge2 = () => {\n    function Timer() {\n      const [timer, setTimer] = useState(0);\n      const [intervalId, setintervalId] = useState(null);\n      let start = {\n        padding: \"25px\",\n        backgroundColor: \"green\",\n        textAlign: \"center\"\n      }\n      let stop = {\n        padding: \"25px\",\n        backgroundColor: \"red\",\n        textAlign: \"center\"\n      }\n      let reset = {\n        padding: \"25px\",\n        backgroundColor: \"yellow\",\n        textAlign: \"center\"\n      }\n  \n      const starttimer = () => {\n        if (!intervalId) {\n          const id = setInterval(() => {\n            setTimer((count) => (count + 1));\n          }, 1000);\n          setintervalId(id);\n        }\n      };\n      const stoptimer = () => {\n        if (intervalId) {\n          clearInterval(intervalId);\n          setintervalId(null);\n        }\n      }\n      const resettimer = () => {\n        if (intervalId) {\n          clearInterval(intervalId);\n        }\n        setTimer(0);\n        setintervalId(null);\n      }\n      return (\n        <>\n          <div style={{ textAlign: \"center\", marginTop: \"400px\", fontSize: \"30px\" }}>{timer} seconds</div>\n          <div style={{ textAlign: \"center\" }}>\n            <button style={start} onClick={starttimer}> Start </button>\n            <button style={stop} onClick={stoptimer}> Stop </button>\n            <button style={reset} onClick={resettimer}> Reset </button>\n          </div>\n        </>\n      )\n      //******************************alternative**************************************************************\n      // const [timer, setTimer] = useState(0);\n  \n      // const startTimer = () => {\n      //   window.mTimer = setInterval(() => {\n      //     setTimer((timer) => timer + 1);\n      //   }, 1000);\n      // };\n      // const stopTimer = () => {\n      //   clearInterval(window.mTimer);\n      // };\n      // const resetTimer = () => {\n      //   clearInterval(window.mTimer);\n      //   setTimer(0);\n      // };\n      // return (\n      //   <div className=\"container\">\n      //     <h1>Timer</h1>\n      //     <span>{Math.trunc(timer / 60)} mins </span>\n      //     <span>{timer % 60} secs</span>\n      //     <div>\n      //       <button onClick={startTimer}>Start</button>\n      //       <button onClick={stopTimer}>Stop</button>\n      //       <button onClick={resetTimer}>Reset</button>\n      //     </div>\n      //   </div>\n      // );\n    }\n  }"],"mappings":";;AACAA,OAAO,CAACC,UAAU,GAAG,MAAM;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACvB,SAASC,KAAKA,CAAA,EAAG;IAAAF,EAAA;IACf,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;IACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;IAClD,IAAIG,KAAK,GAAG;MACVC,OAAO,EAAE,MAAM;MACfC,eAAe,EAAE,OAAO;MACxBC,SAAS,EAAE;IACb,CAAC;IACD,IAAIC,IAAI,GAAG;MACTH,OAAO,EAAE,MAAM;MACfC,eAAe,EAAE,KAAK;MACtBC,SAAS,EAAE;IACb,CAAC;IACD,IAAIE,KAAK,GAAG;MACVJ,OAAO,EAAE,MAAM;MACfC,eAAe,EAAE,QAAQ;MACzBC,SAAS,EAAE;IACb,CAAC;IAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;MACvB,IAAI,CAACR,UAAU,EAAE;QACf,MAAMS,EAAE,GAAGC,WAAW,CAAC,MAAM;UAC3BZ,QAAQ,CAAEa,KAAK,IAAMA,KAAK,GAAG,CAAE,CAAC;QAClC,CAAC,EAAE,IAAI,CAAC;QACRV,aAAa,CAACQ,EAAE,CAAC;MACnB;IACF,CAAC;IACD,MAAMG,SAAS,GAAGA,CAAA,KAAM;MACtB,IAAIZ,UAAU,EAAE;QACda,aAAa,CAACb,UAAU,CAAC;QACzBC,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC;IACD,MAAMa,UAAU,GAAGA,CAAA,KAAM;MACvB,IAAId,UAAU,EAAE;QACda,aAAa,CAACb,UAAU,CAAC;MAC3B;MACAF,QAAQ,CAAC,CAAC,CAAC;MACXG,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC;IACD,oBACEc,OAAA,CAAAC,SAAA;MAAAC,QAAA,gBACEF,OAAA;QAAKG,KAAK,EAAE;UAAEb,SAAS,EAAE,QAAQ;UAAEc,SAAS,EAAE,OAAO;UAAEC,QAAQ,EAAE;QAAO,CAAE;QAAAH,QAAA,GAAEpB,KAAK,EAAC,UAAQ;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChGT,OAAA;QAAKG,KAAK,EAAE;UAAEb,SAAS,EAAE;QAAS,CAAE;QAAAY,QAAA,gBAClCF,OAAA;UAAQG,KAAK,EAAEhB,KAAM;UAACuB,OAAO,EAAEjB,UAAW;UAAAS,QAAA,EAAC;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3DT,OAAA;UAAQG,KAAK,EAAEZ,IAAK;UAACmB,OAAO,EAAEb,SAAU;UAAAK,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxDT,OAAA;UAAQG,KAAK,EAAEX,KAAM;UAACkB,OAAO,EAAEX,UAAW;UAAAG,QAAA,EAAC;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA,eACN,CAAC;IAEL;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;EAAC9B,EAAA,CA7EQE,KAAK;AA8EhB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}