{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\n// function useFetch(url) {\n//     const [loading, setLoading] = useState(true);\n//     const [data, setData] = useState(null);\n//     const [error, setError] = useState(null);\n\n//     useEffect(() => {\n//       setLoading(true);\n\n//       fetch(url)\n//         .then((res) => res.json())\n//         .then((data) => {\n//           setData(data);\n//           setError(null);\n//           setLoading(false);\n//         })\n//         .catch((e) => {\n//           console.warn(e.message);\n//           setError(\"Error fetching data. Try again.\");\n//           setLoading(false);\n//         });\n//     }, [url]);\n\n//     return { loading, data, error };\n//   }\n\n//   const postIds = [1, 2, 3, 4, 5, 6, 7, 8];\n\n//   export default function Challenge9() {\n//     const [index, setIndex] = useState(0);\n\n//     const { loading, data: post, error } = useFetch(\n//       `https://jsonplaceholder.typicode.com/posts/${postIds[index]}`\n//     );\n\n//     const incrementIndex = () => {\n//       setIndex((i) => (i === postIds.length - 1 ? i : i + 1));\n//     };\n\n//     if (loading === true) {\n//       return <p>Loading</p>;\n//     }\n\n//     if (error) {\n//       return (\n//         <div>\n//           <p>{error}</p>\n//           <button onClick={incrementIndex}>Next Post</button>\n//         </div>\n//       );\n//     }\n\n//     return (\n//       <div className=\"App\">\n//         <h1>{post.title}</h1>\n//         <p>{post.body}</p>\n//         {error && <p>{error}</p>}\n//         {index === postIds.length - 1 ? (\n//           <p>No more posts</p>\n//         ) : (\n//           <button onClick={incrementIndex}>Next Post</button>\n//         )}\n//       </div>\n//     );\n//   }","map":{"version":3,"names":["React","useState","useEffect","useNavigate"],"sources":["/home/shruti-mokariya/Desktop/react/hello/reactpractice/src/challanges/challenge9.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\n\n// function useFetch(url) {\n//     const [loading, setLoading] = useState(true);\n//     const [data, setData] = useState(null);\n//     const [error, setError] = useState(null);\n  \n//     useEffect(() => {\n//       setLoading(true);\n  \n//       fetch(url)\n//         .then((res) => res.json())\n//         .then((data) => {\n//           setData(data);\n//           setError(null);\n//           setLoading(false);\n//         })\n//         .catch((e) => {\n//           console.warn(e.message);\n//           setError(\"Error fetching data. Try again.\");\n//           setLoading(false);\n//         });\n//     }, [url]);\n  \n//     return { loading, data, error };\n//   }\n  \n//   const postIds = [1, 2, 3, 4, 5, 6, 7, 8];\n  \n//   export default function Challenge9() {\n//     const [index, setIndex] = useState(0);\n  \n//     const { loading, data: post, error } = useFetch(\n//       `https://jsonplaceholder.typicode.com/posts/${postIds[index]}`\n//     );\n  \n//     const incrementIndex = () => {\n//       setIndex((i) => (i === postIds.length - 1 ? i : i + 1));\n//     };\n  \n//     if (loading === true) {\n//       return <p>Loading</p>;\n//     }\n  \n//     if (error) {\n//       return (\n//         <div>\n//           <p>{error}</p>\n//           <button onClick={incrementIndex}>Next Post</button>\n//         </div>\n//       );\n//     }\n  \n//     return (\n//       <div className=\"App\">\n//         <h1>{post.title}</h1>\n//         <p>{post.body}</p>\n//         {error && <p>{error}</p>}\n//         {index === postIds.length - 1 ? (\n//           <p>No more posts</p>\n//         ) : (\n//           <button onClick={incrementIndex}>Next Post</button>\n//         )}\n//       </div>\n//     );\n//   }\n  "],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;;AAG9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}