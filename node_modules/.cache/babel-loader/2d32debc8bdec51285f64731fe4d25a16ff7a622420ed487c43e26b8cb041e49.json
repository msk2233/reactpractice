{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\n// export default async function Challenge9(){\n//         fetch('https://jsonplaceholder.typicode.com/posts')\n//         .then(response => response.json())\n//         .then(data => console.log(data));\n// }\n\nasync function Challenge9() {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=10');\n  const data = await response.json();\n  console.log(data);\n}\n_c = Challenge9;\nexport default function Abc() {\n  // Call the function\n  Challenge9();\n}\n_c2 = Abc;\nvar _c, _c2;\n$RefreshReg$(_c, \"Challenge9\");\n$RefreshReg$(_c2, \"Abc\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Challenge9","response","fetch","data","json","console","log","_c","Abc","_c2","$RefreshReg$"],"sources":["/home/shruti-mokariya/Desktop/react/hello/reactpractice/src/challanges/challenge9.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\n// export default async function Challenge9(){\n//         fetch('https://jsonplaceholder.typicode.com/posts')\n//         .then(response => response.json())\n//         .then(data => console.log(data));\n// }\n\n  async function Challenge9() {\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=10');\n      const data = await response.json();\n      console.log(data);\n  }\n  export default function Abc() {\n      // Call the function\n      Challenge9();\n  }\n  "],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;;AAEE,eAAeC,UAAUA,CAAA,EAAG;EACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,CAAC;EACpF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;AACrB;AAACI,EAAA,GAJcP,UAAU;AAKzB,eAAe,SAASQ,GAAGA,CAAA,EAAG;EAC1B;EACAR,UAAU,CAAC,CAAC;AAChB;AAACS,GAAA,GAHuBD,GAAG;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}