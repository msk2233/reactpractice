<link rel="stylesheet" href="/sweetalert2/sweetalert2.min.css">
  <script src="/sweetalert2/sweetalert2.min.js"></script>
<style>

.error_message {
      color: red;

    }

</style>


<%-include ('adminSidebar',{search : 0}) %>
  <div class="table1 overflow-auto">
    <h2 class="text-center mt-2">Edit Book</h2>
    <div id="success"></div>
    <form class="" enctype="multipart/form-data" id="my-form">
      <input type="text" name="bookid" value="<%= result[0].prime_book_id %>" hidden>
      <div class="form-row">
        <div class="form-group col-md">
          
            <label for="myInput" style="margin-bottom: 5px;" >Select Genre</label>
          <input type="text" placeholder="search.." id="myInput" onkeyup="filteroptions('optionfield',this.id,)" class="d-block" value="">
          <ul id="genreid" name="genreid"  class="form-control" style="width: 15%;max-height: 150px;overflow: scroll;" >
          </ul>
        <input type="hidden" name="genreid" id="setgenreid" value="<%=result[0].genre_id%>">
        
        <div class="form-group col-md">
          <label for="inputPassword4">Title</label>
          <input type="text" class="form-control" name="title" id="bookTitle" placeholder="Title"
            value="<%=result[0].book_title %>">
          <span id="bookTitle_error" class="error_message"></span>
        </div>
        <div class="form-group col-md">
          <label for="authorname">select author</label>
          <input type="text" placeholder="search.." id="myInputAuthor" onkeyup="filteroptions('optionfieldauthor',this.id)" class="d-block" value="">
         <ul id="authorid" class="form-control" style="width: 15%;max-height: 150px;overflow: scroll;">
        
         </ul>
         <input type="hidden" name="author_id" id="setauthorid" value="<%=result[0].author_id%>">
        </div>
      </div>
      <div class="form-row">
        <div class="form-group col-md">
          <label for="inputEmail4">Publication Name</label>
          <input type="text" name="publication" class="form-control" id="publication" placeholder="Publication"
            value="<%=result[0].book_publication %>">
          <span id="publication_error" class="error_message"></span>
        </div>

        <div class="form-group col-md">
          <label for="inputPassword4">Published Year</label>
          <input type="text" class="form-control" id="publicationYear" name="publicationyear" placeholder="Year"
            value="<%=result[0].book_publication_year %>">
          <span id="publicationYear_error" class="error_message"></span>
        </div>
      </div>
      <div class="form-group">
        <label for="inputAddress">ISBN</label>
        <input type="text" class="form-control" name="isbn" id="isbn" placeholder="ISBN"
          value="<%=result[0].book_ISBN %>">
        <span id="isbn_error" class="error_message"></span>
      </div>
      <div class="form-group">
        <label for="inputAddress2">Description</label>
        <input type="text" class="form-control" name="desc" id="bookDescription" placeholder="Description"
          value="<%=result[0].book_desc %>">
        <span id="bookDescription_error" class="error_message"></span>
      </div>

      <div id="output">
        <label for="imagecover">Image</label>
        <br>
        <img src="" alt="" id="ImagePreview" style="max-width: 100px;max-height: 100px;">
      </div>
      <div class="form-group col-md">
        <input type="file" name="image" class="form-control" id="imagecover" accept="image/*" value=""
          onchange="previewImage(event)">
        <span id="imagecover_error" class="error_message"></span>
      </div>
      <input type="button" class="btn btn-primary mt-3" value="update" onclick="validateForm()">
    </form>
  </div>
  </div>
  </div>
  </body>


  <script>
          
const parsedUrl = new URL(window.location.href);
console.log(parsedUrl.searchParams.get('bookid'));
const ImagePreview=document.getElementById("ImagePreview");

ImagePreview.src="<%=result[0].book_img%>"
let select=document.getElementById("genreid");
let select1=document.getElementById("authorid");
select.style.display="none"
 select1.style.display="none"
    genreselect();
    getAuthors();
    function onclickLi(livalue,id){
        document.getElementById('myInput').value=livalue
        document.getElementById('setgenreid').value=id
      }
      function onclickLiauthor(livalue,id){
        document.getElementById('myInputAuthor').value=livalue
        document.getElementById('setauthorid').value=id
      }
async function genreselect(){
  let genrearray=[]
  let data=await fetch("/admin/getGenres",{
    method:"Get",
    headers:{"Content-Type":"application/json",
},
  })
  
  let datahh=await data.json();

  let datafinal=datahh.data;
  let obj={};

  let temp=""
      for(let i=0;i<datafinal.length;i++){
        obj[datafinal[i].genre_id]=datafinal[i].genre_name;
        temp+=`<li class="optionfield" onclick="onclickLi('${datafinal[i].genre_name}','${datafinal[i].genre_id}')">${datafinal[i].genre_name}</li>`
        let option=document.createElement("li");
      
      }
      let select=document.getElementById("genreid");
    
      select.innerHTML=temp
      console.log(obj);
 let genreId='<%=result[0].genre_id%>';
let myInput=document.getElementById("myInput");
myInput.value=obj[genreId];
console.log(obj[genreId]);
  
}


function previewImage(event){
  const input=event.target;

      if (input.files && input.files[0]) {
        const reader = new FileReader();
        reader.onload = function (e) {
          ImagePreview.src = e.target.result;
        }
        reader.readAsDataURL(input.files[0]);
      }

    }


async function getAuthors(){
  let authorarray=[]
  let data=await fetch("/admin/getAllAuthors",{
    method:"Get",
    headers:{"Content-Type":"application/json",
},
  })
  let dataauthor=await data.json();
  let authors=dataauthor.authors;

  let author_id='<%=result[0].author_id%>'

 let idarr=author_id.split(",")
 let tempa=""
let objauthor={}
let myInputAuthor=document.getElementById("myInputAuthor");
      for(let i=0;i<authors.length;i++){
        authorarray.push(authors[i].author_name)
        objauthor[authors[i].author_id]=authors[i].author_name;
        let option=document.createElement("li");
        tempa+=`<li class="optionfieldauthor" onclick="onclickLiauthor('${authors[i].author_name}','${authors[i].author_id}')">${authors[i].author_name}</li>`
  
      }
      let select=document.getElementById("authorid");
 
      select1.innerHTML=tempa;
  
    myInputAuthor.value=objauthor[author_id];
   return authorarray


}

function filteroptions(classname,id){
    
     if(id==="myInput"){
      select.style.display="block"
      select1.style.display="none"
    }
    else if(id==='myInputAuthor'){
      select.style.display="none"
      select1.style.display="block"
    }
      
    let input=document.getElementById(id);
    let nameOfClass="."+classname;
    const filter=input.value.toLowerCase();
  
    const options=document.querySelectorAll(nameOfClass);
    options.forEach((option)=>{
      const text=option.textContent.toLowerCase();
  
      option.style.display=text.includes(filter)?"block":"none"
    })
   }          
  
function validateForm(){
  let genrename= document.getElementById("myInput");
  let authorname=document.getElementById("myInputAuthor");
 let bookTitle=document.getElementById("bookTitle")
  let publication=document.getElementById("publication")
   let publicationYear=document.getElementById("publicationYear")
  let bookDescription=document.getElementById("bookDescription")
  let isbn=document.getElementById("isbn")

      let imagecover = document.getElementById("imagecover")
      let fields = [bookTitle, publication, publicationYear, bookDescription, isbn];

      let errorMessages = ["booktitle is required", "publication is required", "publication year is required", "book description is required", "isbn is required"]
      let isValid = true;
      console.log(fields.length);
      for (let i = 0; i < fields.length; i++) {
        let errorElement = document.getElementById(fields[i].id + "_error");
        console.log(errorElement);
        console.log(fields[i]);
        if (!fields[i].value.trim()) {
          console.log(fields[i]);
          fields[i].classList.add("error");
          errorElement.textContent = errorMessages[i];
          isValid = false;
        }
        else {
          errorElement.textContent = ""
          fields[i].classList.remove("error");
        }
      }
      let year = publicationYear.value.trim();
      if (isNaN(year)) {
        document.getElementById("publicationYear_error").textContent = "Enter valid year";
        isValid = false;
      }
      else if (publicationYear.value.trim() != "" && (Number(publicationYear.value.trim()) < 1800 || Number(publicationYear.value.trim()) > new Date().getFullYear())) {
        publicationYear.classList.add("error");
        document.getElementById("publicationYear_error").textContent = "publication year must be between 1800 and current year"
        isValid = false;
      }
      if (bookDescription.value.trim() != "" && (bookDescription.value.trim().length < 50 || bookDescription.value.trim().length > 250)) {
        document.getElementById("bookDescription_error").textContent = "description must be between 50 and 250 characters"
        isValid = false;
      }

      if (imagecover.value != "" && (imagecover.files[0] && imagecover.files[0].size > 20000)) {
        imagecover.classList.add("error");
        document.getElementById("imagecover_error").textContent = "Book cover size must be less than 20 KB "
        isValid = false;
      }
      if (isValid === true) {

        updateBook();

      }
      return isValid;
    }

async function updateBook(){
  const form=document.getElementById("my-form")
const formData =new FormData(form);
const params=new URLSearchParams(formData)
params.append('file',imagecover.files[0])
const response=  await fetch('/admin/editBook', {
               method: 'POST',
               'Content-Type':"application/json",
               body: formData,
           });
let data=await response.json();
 

if(data.message==="success"){
  Swal.fire({
      title: "update Book!",
      text: "book has been updated succesfully",
      icon: "success"
    }).then((result)=>{
      if(result.isConfirmed){
        
       window.location.href = `/admin/editBook/?bookid=${parsedUrl.searchParams.get('bookid')}`
      }
    });
}
if(data.message==="error"){
          Swal.fire({
      title: "error!",
      text: "error while updating book.",
      icon: "error"
    }).then((result)=>{
      if(result.isConfirmed){
         
      }
    });

        }

    }
  </script>

  </html>