<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="stylesheet" href="/sweetalert2/sweetalert2.min.css">
  <script src="/sweetalert2/sweetalert2.min.js"></script>
  <style>
 
    .error_message{
      color:red;
      margin-bottom: 10px;
    }
  </style>
</head>
<body>
  <%-include ('../admin/adminSidebar',{search : 0}) %>
  <div class="table1 overflow-auto">
    <h2 class="text-center">update Author</h2>
    <div id="success"></div>
    <form  id="my-form"  enctype="multipart/form-data" >
      <div class="form-row">
          <input type="hidden" class="form-control" name="id" id="authorname" value="<%=author.author_id%>" placeholder="name">
   
        <div class="form-group col-md">
          <label for="authorname">Name</label>
          <input type="text" class="form-control" name="author_name" id="authorname" value="<%=author.author_name%>" placeholder="name">
          <span id="authorname_error" class="error_message"></span>
        </div>
        <div class="form-group col-md">
          <label for="description">Description</label>
          <textarea class="form-control text-justify" name="author_desc" id="description" placeholder="description"><%= author.author_desc %></textarea>
          <span id="description_error" class="error_message"></span>
        </div>
      </div>
    
        
      
      <div id="output" >
        <label for="imagecover">Image</label>
        <br>
        <img src="" alt="" id="ImagePreview" style="max-width: 100px;max-height: 100px;">
      </div>
      <div class="form-group col-md" >
       
        <input type="file" name="image" class="form-control" id="imageauthor" accept="image/*" value="" onchange="previewImage(event)">
        <span id="imageauthor_error" class="error_message"></span>
      </div>
   <input type="button" class="btn btn-primary mt-3" value="update" onclick="validateForm()">
    </form>
  </div>
  </div>
  </div>
  <script>
  const ImagePreview=document.getElementById("ImagePreview");
console.log(window.location.pathname);
let arrpath=window.location.pathname.split("/")
console.log(arrpath[arrpath.length-1]);
  ImagePreview.src="<%=author.author_img%>"
function previewImage(event){
  const input=event.target;

  if(input.files && input.files[0]){
    const reader=new FileReader();
    reader.onload=function (e){
      ImagePreview.src=e.target.result;
    }
    reader.readAsDataURL(input.files[0]);
  }

}

let authorname=document.getElementById("authorname");
let description=document.getElementById("description");
let imageauthor=document.getElementById("imageauthor");
function validateForm(){

let fields=[authorname,description];
let errorMessages=["author name is required","description is required"];
let isValid=true;
for(let i=0;i<fields.length;i++){
    let errorElement=document.getElementById(fields[i].id+"_error");
    console.log(errorElement);
    if(!fields[i].value.trim()){
      errorElement.textContent=errorMessages[i];
      isValid=false;
    }
    else{
      errorElement.textContent=""
    }
   }

let desc=description.value.trim();
 if(desc!=""&& (desc.length<50 || desc.length>250)){
    document.getElementById("description_error").textContent="description must be between 50 and 250 characters"
    isValid= false;
}
if(imageauthor.value!="" && (imageauthor.files[0] && imageauthor.files[0].size>20000)){
  imageauthor.classList.add("error");
  document.getElementById("imageauthor_error").textContent="author image size must be less than 20000 bytes "
 isValid=false;
}
if(isValid===true){
updateAuthor()
}
   return isValid;

}


async function updateAuthor(){
const form=document.getElementById("my-form")
const formData =new FormData(form);
const params=new URLSearchParams(formData)
params.append('file',imageauthor.files[0])
console.log(formData);
const response=  await fetch('/admin/updateAuthor', {
               method: 'POST',
               'Content-Type':"application/json",
               body: formData,
           });
let data=await response.json();
console.log(data);

if(data.message==="success"){
  Swal.fire({
      title: "update author!",
      text: "author update succesfully",
      icon: "success"
    }).then((result)=>{
      if(result.isConfirmed){
        window.location.href = `/admin/getSingleAuthor/${arrpath[arrpath.length-1]}`
      }
    });

}

} 
  </script>
  </body>

</html>

