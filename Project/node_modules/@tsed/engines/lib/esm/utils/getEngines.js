import { engines } from "../registries/EnginesContainer.js";
const callbackify = async (fn, cb) => {
    try {
        const html = await fn();
        cb && cb(null, html);
        return html;
    }
    catch (er) {
        if (cb) {
            cb(er);
        }
        else {
            throw er;
        }
    }
};
export function getEngine(name) {
    const cb = async (path, options, cb) => {
        const engine = engines.get(name);
        await engine.$onInit();
        return callbackify(() => engine.renderFile(path, options), cb);
    };
    cb.render = async (template, options, cb) => {
        const engine = engines.get(name);
        await engine.$onInit();
        return callbackify(() => engine.render(template, options), cb);
    };
    return cb;
}
let localEngines;
export function getEngines() {
    localEngines =
        localEngines ||
            engines.getSupportedEngines().reduce((acc, key) => {
                return {
                    ...acc,
                    [key]: getEngine(key)
                };
            }, {});
    return localEngines;
}
//# sourceMappingURL=getEngines.js.map