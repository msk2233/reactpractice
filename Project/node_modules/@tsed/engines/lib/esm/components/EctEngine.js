import { __decorate } from "tslib";
import { promisify } from "util";
import { ViewEngine } from "../decorators/viewEngine.js";
import { Engine } from "./Engine.js";
let EctEngine = class EctEngine extends Engine {
    $compile(template, options) {
        const ECT = this.engine;
        const engine = new ECT({ root: { page: template } });
        const compile = promisify(engine.render.bind(engine));
        return (options) => compile("page", options);
    }
    $compileFile(file, options) {
        const ECT = this.engine;
        const engine = new ECT(options);
        engine.configure({ cache: options.cache });
        const compile = promisify(engine.render.bind(engine));
        return Promise.resolve((options) => compile(file, options));
    }
};
EctEngine = __decorate([
    ViewEngine("ect")
], EctEngine);
export { EctEngine };
//# sourceMappingURL=EctEngine.js.map