import { __decorate } from "tslib";
import { read } from "../utils/cache.js";
import { extname } from "path";
import { ViewEngine } from "../decorators/viewEngine.js";
import { Engine } from "./Engine.js";
import { promisify } from "util";
let DustEngine = class DustEngine extends Engine {
    views = ".";
    ext = "dust";
    configure(options) {
        if (options) {
            if (options.ext) {
                this.ext = options.ext;
            }
            if (options.views) {
                this.views = options.views;
            }
            if (options.settings && options.settings.views) {
                this.views = options.settings.views;
            }
        }
        if (!options || (options && !options.cache))
            this.engine.cache = {};
        this.engine.onLoad = async (path, callback) => {
            if (extname(path) === "") {
                path += `.${this.ext}`;
            }
            if (path[0] !== "/") {
                path = `${this.views}/${path}`;
            }
            try {
                callback(null, await read(path, options));
            }
            catch (er) {
                callback(er);
            }
        };
    }
    $compile(template, options) {
        this.configure(options);
        let templateName;
        if (options.filename) {
            templateName = options.filename.replace(new RegExp("^" + this.views + "/"), "").replace(new RegExp("\\." + this.ext), "");
        }
        return promisify(this.engine.compileFn(template, templateName));
    }
};
DustEngine = __decorate([
    ViewEngine("dust", {
        requires: ["dustjs-helpers", "dustjs-linkedin"]
    })
], DustEngine);
export { DustEngine };
//# sourceMappingURL=DustEngine.js.map