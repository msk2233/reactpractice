import { __decorate } from "tslib";
import { promisify } from "util";
import { ViewEngine } from "../decorators/viewEngine.js";
import { Engine } from "./Engine.js";
let JustEngine = class JustEngine extends Engine {
    $compile(template, options) {
        const JUST = this.engine;
        const engine = new JUST({ root: { page: template } });
        const compile = promisify(engine.render.bind(engine));
        return (options) => compile("page", options);
    }
    $compileFile(file, options) {
        const JUST = this.engine;
        const engine = new JUST(options);
        engine.configure({ useCache: options.cache });
        const compile = promisify(engine.render.bind(engine));
        return Promise.resolve((options) => compile(file, options));
    }
};
JustEngine = __decorate([
    ViewEngine("just")
], JustEngine);
export { JustEngine };
//# sourceMappingURL=JustEngine.js.map