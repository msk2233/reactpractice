export class LogEvent {
    categoryName;
    level;
    data;
    context;
    /**
     * Models a logging event.
     * @constructor
     * @param categoryName
     * @param level
     * @param data
     * @param context
     */
    constructor(categoryName, level, data, context) {
        this.categoryName = categoryName;
        this.level = level;
        this.data = data;
        this.context = context;
    }
    _startTime = new Date();
    get startTime() {
        return this.data && this.data[0] && this.data[0].time ? this.data[0].time : this._startTime;
    }
    /**
     * @deprecated
     */
    get formatedLevel() {
        return this.formattedLevel;
    }
    get formattedLevel() {
        return (this.level.toString() + "     ").slice(0, 5);
    }
    get cluster() {
        return {};
    }
    get pid() {
        return this.context.get("pid");
    }
    isMessage() {
        return this.data.length && typeof this.data[0] !== "object";
    }
    getData() {
        return !this.isMessage() ? this.data[0] : {};
    }
    getMessage() {
        return this.isMessage() ? this.data : undefined;
    }
}
//# sourceMappingURL=LogEvent.js.map