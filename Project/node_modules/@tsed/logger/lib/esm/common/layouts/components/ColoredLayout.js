import { __decorate } from "tslib";
import * as Util from "util";
import { timestampLevelAndCategory } from "../utils/timestampLevelAndCategory.js";
import { LOG_COLORS } from "../constants/logColors.js";
import { Layout } from "../decorators/layout.js";
import { BaseLayout } from "../class/BaseLayout.js";
let ColoredLayout = class ColoredLayout extends BaseLayout {
    /**
     * colouredLayout - taken from masylum's fork.
     * same as basicLayout, but with colours.
     */
    transform(loggingEvent, timezoneOffset) {
        const index = loggingEvent.level.toString();
        const color = LOG_COLORS[index];
        return timestampLevelAndCategory(loggingEvent, color, timezoneOffset) + Util.format(...[].concat(loggingEvent.data));
    }
};
ColoredLayout = __decorate([
    Layout({ name: "colored" })
], ColoredLayout);
export { ColoredLayout };
//# sourceMappingURL=ColoredLayout.js.map