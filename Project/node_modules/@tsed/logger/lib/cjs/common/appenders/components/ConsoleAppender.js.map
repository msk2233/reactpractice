{"version":3,"file":"ConsoleAppender.js","sourceRoot":"","sources":["../../../../../src/common/appenders/components/ConsoleAppender.ts"],"names":[],"mappings":";;;;AACA,qDAAgD;AAChD,wDAAmD;AAEnD;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AAEI,IAAM,eAAe,GAArB,MAAM,eAAgB,SAAQ,2BAAY;IACvC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAExC,KAAK,CAAC,YAAsB;QAC1B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;IAClE,CAAC;CACF,CAAA;AANY,0CAAe;0BAAf,eAAe;IAD3B,IAAA,mBAAQ,EAAC,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC;GACf,eAAe,CAM3B","sourcesContent":["import {LogEvent} from \"../../core/LogEvent\";\nimport {Appender} from \"../decorators/appender\";\nimport {BaseAppender} from \"../class/BaseAppender\";\n\n/**\n * ## Console Appender\n *\n * This appender uses node’s console object to write log events. It can also be used in the browser, if you’re using browserify or something similar. Be aware that writing a high volume of output to the console can make your application use a lot of memory. If you experience this problem, try switching to the stdout appender.\n *\n * ## Configuration\n *\n * * type - console\n * * layout - object (optional, defaults to colouredLayout) - see layouts\n *\n * Note that all log events are output using console.log regardless of the event’s level (so ERROR events will not be logged using console.error)\n *\n * ## Example\n *\n * ```typescript\n * import {Logger} from \"@tsed/logger\";\n *\n * const logger = new Logger(\"loggerName\");\n *\n * logger.appenders.set(\"console\", {\n *     type: \"console\",\n *     levels: [\"debug\", \"info\", \"trace\"]\n * });\n * ```\n *\n * @private\n */\n@Appender({name: \"console\"})\nexport class ConsoleAppender extends BaseAppender {\n  private log = console.log.bind(console);\n\n  write(loggingEvent: LogEvent) {\n    this.log(this.layout(loggingEvent, this.config.timezoneOffset));\n  }\n}\n"]}