{"version":3,"file":"LogEvent.js","sourceRoot":"","sources":["../../../../src/common/core/LogEvent.ts"],"names":[],"mappings":";;;AAGA,MAAa,QAAQ;IAUD;IACA;IACT;IACS;IAZlB;;;;;;;OAOG;IACH,YACkB,YAAoB,EACpB,KAAe,EACxB,IAAW,EACF,OAAmB;QAHnB,iBAAY,GAAZ,YAAY,CAAQ;QACpB,UAAK,GAAL,KAAK,CAAU;QACxB,SAAI,GAAJ,IAAI,CAAO;QACF,YAAO,GAAP,OAAO,CAAY;IAClC,CAAC;IAEI,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;IAEhC,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;IAC9F,CAAC;IAED;;OAEG;IACH,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,IAAW,cAAc;QACvB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,IAAW,OAAO;QAChB,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,IAAW,GAAG;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC;IAC9D,CAAC;IAEM,OAAO;QACZ,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/C,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;IAClD,CAAC;CACF;AApDD,4BAoDC","sourcesContent":["import {LogLevel} from \"./LogLevel\";\nimport {LogContext} from \"./LogContext\";\n\nexport class LogEvent {\n  /**\n   * Models a logging event.\n   * @constructor\n   * @param categoryName\n   * @param level\n   * @param data\n   * @param context\n   */\n  constructor(\n    public readonly categoryName: string,\n    public readonly level: LogLevel,\n    public data: any[],\n    public readonly context: LogContext\n  ) {}\n\n  private _startTime = new Date();\n\n  get startTime(): Date {\n    return this.data && this.data[0] && this.data[0].time ? this.data[0].time : this._startTime;\n  }\n\n  /**\n   * @deprecated\n   */\n  public get formatedLevel(): string {\n    return this.formattedLevel;\n  }\n\n  public get formattedLevel(): string {\n    return (this.level.toString() + \"     \").slice(0, 5);\n  }\n\n  public get cluster(): any {\n    return {};\n  }\n\n  public get pid() {\n    return this.context.get(\"pid\");\n  }\n\n  public isMessage() {\n    return this.data.length && typeof this.data[0] !== \"object\";\n  }\n\n  public getData() {\n    return !this.isMessage() ? this.data[0] : {};\n  }\n\n  public getMessage() {\n    return this.isMessage() ? this.data : undefined;\n  }\n}\n"]}