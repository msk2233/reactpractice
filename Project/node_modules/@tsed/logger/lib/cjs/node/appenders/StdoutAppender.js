"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StdoutAppender = void 0;
const tslib_1 = require("tslib");
const appender_1 = require("../../common/appenders/decorators/appender");
const BaseAppender_1 = require("../../common/appenders/class/BaseAppender");
/**
 * ## Standard Output Appender
 *
 * This appender writes all log events to the standard output stream.
 *
 * ## Configuration
 *
 * * type - stderr
 * * layout - object (optional, defaults to colouredLayout) - see layouts
 *
 * ## Example
 *
 * ```typescript
 * import {Logger} from "@tsed/logger";
 *
 * const logger = new Logger("loggerName");
 *
 * logger.appenders.set("log", {
 *     type: "stdout",
 *     levels: ["info", "trace", "debug"]
 * });
 * ```
 *
 * @private
 */
let StdoutAppender = class StdoutAppender extends BaseAppender_1.BaseAppender {
    log = process.stdout.write.bind(process.stdout);
    write(loggingEvent) {
        this.log(`${this.layout(loggingEvent, this.config.timezoneOffset)}\n`);
    }
};
exports.StdoutAppender = StdoutAppender;
exports.StdoutAppender = StdoutAppender = tslib_1.__decorate([
    (0, appender_1.Appender)({ name: "stdout" })
], StdoutAppender);
//# sourceMappingURL=StdoutAppender.js.map