"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StderrAppender = void 0;
const tslib_1 = require("tslib");
const appender_1 = require("../../common/appenders/decorators/appender");
const BaseAppender_1 = require("../../common/appenders/class/BaseAppender");
/**
 * ## Standard Error Appender
 *
 * This appender writes all log events to the standard error stream.
 *
 * ## Configuration
 *
 * * type - stderr
 * * layout - object (optional, defaults to colouredLayout) - see layouts
 *
 * ## Example
 *
 * ```typescript
 * import {Logger} from "@tsed/logger";
 *
 * const logger = new Logger("loggerName");
 *
 * logger.appenders.set("log-error", {
 *     type: "stderr",
 *     levels: ["error", "warn", "fatal"]
 * });
 * ```
 *
 * @private
 */
let StderrAppender = class StderrAppender extends BaseAppender_1.BaseAppender {
    log = process.stderr.write.bind(process.stderr);
    write(loggingEvent) {
        this.log(`${this.layout(loggingEvent, this.config.timezoneOffset)}\n`);
    }
};
exports.StderrAppender = StderrAppender;
exports.StderrAppender = StderrAppender = tslib_1.__decorate([
    (0, appender_1.Appender)({ name: "stderr" })
], StderrAppender);
//# sourceMappingURL=StderrAppender.js.map