"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UseParam = void 0;
const core_1 = require("@tsed/core");
const ParamTypes_1 = require("../domain/ParamTypes");
const useDeserialization_1 = require("./useDeserialization");
const useParamType_1 = require("./useParamType");
const useType_1 = require("./useType");
const useValidation_1 = require("./useValidation");
/**
 * @ignore
 * @param options
 */
function mapPipes(options) {
    const { paramType, useType, expression, useValidation, useMapper, ...props } = options;
    return [paramType !== ParamTypes_1.ParamTypes.FILES && (0, useType_1.UseType)(useType), useValidation && (0, useValidation_1.UseValidation)(), useMapper && (0, useDeserialization_1.UseDeserialization)(props)];
}
/**
 * Register a new param. It uses the paramType to extract value and give it to the next pipe.
 *
 * Given options allow to enable or disable following pipes:
 *
 * - useType: Add extra type for the json mapper,
 * - expression: Get property from the returned value by the previous pipe.
 * - useValidation: Apply validation from the returned value by the previous pipe.
 * - useMapper: Apply json mapper from the returned value by the previous pipe.
 *
 * @param options
 * @decorator
 * @operation
 * @input
 * @pipe
 */
function UseParam(options) {
    return (0, core_1.useDecorators)((0, useParamType_1.UseParamType)(options), ...mapPipes(options));
}
exports.UseParam = UseParam;
//# sourceMappingURL=useParam.js.map