/// <reference types="multer" />
/// <reference types="node" />
import { InjectorService } from "@tsed/di";
import { PlatformRouter } from "@tsed/platform-router";
import { IncomingMessage, ServerResponse } from "http";
import { PlatformMulterSettings } from "../config/interfaces/PlatformMulterSettings";
import { PlatformAdapter } from "./PlatformAdapter";
declare global {
    namespace TsED {
        interface Application {
        }
    }
}
/**
 * `PlatformApplication` is used to provide all routes collected by annotation `@Controller`.
 *
 * @platform
 */
export declare class PlatformApplication<App = TsED.Application> extends PlatformRouter {
    adapter: PlatformAdapter<App>;
    injector: InjectorService;
    rawApp: App;
    rawCallback: () => any;
    constructor(adapter: PlatformAdapter<App>, injector: InjectorService);
    getApp(): App;
    multer(options: PlatformMulterSettings): import("multer").Multer;
    callback(): (req: IncomingMessage, res: ServerResponse) => any;
    callback(req: IncomingMessage, res: ServerResponse): any;
}
