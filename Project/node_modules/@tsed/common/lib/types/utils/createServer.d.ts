/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import { ReturnHostInfoFromPort } from "@tsed/core";
import { InjectorService, TokenProvider } from "@tsed/di";
import Http from "http";
import Http2 from "http2";
import Https from "https";
export interface CreateServerOptions {
    token: TokenProvider;
    type: "http" | "https";
    port: string | false;
    listen?: (hostInfo: ReturnHostInfoFromPort) => Promise<any>;
    server: () => Http.Server | Https.Server | Http2.Http2Server;
}
export type CreateServerReturn = () => Promise<Http.Server | Https.Server | Http2.Http2Server>;
export declare function createServer(injector: InjectorService, { token, type, port, server: get, listen }: CreateServerOptions): undefined | CreateServerReturn;
