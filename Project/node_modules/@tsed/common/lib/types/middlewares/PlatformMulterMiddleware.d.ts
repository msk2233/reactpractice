import { BadRequest } from "@tsed/exceptions";
import { MiddlewareMethods } from "@tsed/platform-middlewares";
import type { MulterError } from "multer";
import { PlatformMulterField, PlatformMulterSettings } from "../config/interfaces/PlatformMulterSettings";
import { PlatformContext } from "../domain/PlatformContext";
import { PlatformApplication } from "../services/PlatformApplication";
export interface MulterInputOptions {
    fields: PlatformMulterField[];
}
export declare class MulterException extends BadRequest {
    constructor(er: MulterError);
}
/**
 * @middleware
 */
export declare class PlatformMulterMiddleware implements MiddlewareMethods {
    protected settings: PlatformMulterSettings;
    protected app: PlatformApplication;
    use(ctx: PlatformContext): Promise<any>;
    protected getFields(conf: MulterInputOptions): {
        name: string;
        maxCount: number | undefined;
    }[];
}
