"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlatformApplication = void 0;
const tslib_1 = require("tslib");
const di_1 = require("@tsed/di");
const platform_router_1 = require("@tsed/platform-router");
const PlatformAdapter_1 = require("./PlatformAdapter");
/**
 * `PlatformApplication` is used to provide all routes collected by annotation `@Controller`.
 *
 * @platform
 */
let PlatformApplication = class PlatformApplication extends platform_router_1.PlatformRouter {
    adapter;
    injector;
    rawApp;
    rawCallback;
    constructor(adapter, injector) {
        super(injector);
        this.adapter = adapter;
        this.injector = injector;
        const { app, callback } = adapter.createApp();
        this.rawApp = app;
        this.rawCallback = callback;
    }
    getApp() {
        return this.rawApp;
    }
    multer(options) {
        return this.adapter.multipart(options);
    }
    callback(req, res) {
        if (req && res) {
            return this.callback()(req, res);
        }
        return this.rawCallback();
    }
};
PlatformApplication = tslib_1.__decorate([
    (0, di_1.Injectable)({
        scope: di_1.ProviderScope.SINGLETON,
        alias: "PlatformApplication"
    }),
    tslib_1.__metadata("design:paramtypes", [PlatformAdapter_1.PlatformAdapter, di_1.InjectorService])
], PlatformApplication);
exports.PlatformApplication = PlatformApplication;
//# sourceMappingURL=PlatformApplication.js.map