"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Req = exports.Request = void 0;
const core_1 = require("@tsed/core");
const http_1 = require("http");
const platform_params_1 = require("@tsed/platform-params");
function getParamType(target, propertyKey, parameterIndex) {
    const type = core_1.Metadata.getOwnParamTypes(target, propertyKey)[parameterIndex];
    if ((0, core_1.isClass)(type)) {
        if ((0, core_1.nameOf)(type) === "PlatformRequest") {
            return { paramType: platform_params_1.ParamTypes.PLATFORM_REQUEST, dataPath: "$ctx.request" };
        }
        if (type === http_1.IncomingMessage) {
            return { paramType: platform_params_1.ParamTypes.NODE_REQUEST, dataPath: "$ctx.request.req" };
        }
    }
    return { paramType: platform_params_1.ParamTypes.REQUEST, dataPath: "$ctx.request.request" };
}
function Request(...args) {
    // @ts-ignore
    return Req(...args);
}
exports.Request = Request;
function Req(...args) {
    const { expression, useType, useMapper = false, useValidation = false } = (0, platform_params_1.mapParamsOptions)(args);
    return (target, propertyKey, parameterIndex) => {
        const { paramType, dataPath } = getParamType(target, propertyKey, parameterIndex);
        (0, platform_params_1.UseParam)({
            paramType,
            dataPath,
            expression,
            useType,
            useMapper,
            useValidation
        })(target, propertyKey, parameterIndex);
    };
}
exports.Req = Req;
//# sourceMappingURL=request.js.map