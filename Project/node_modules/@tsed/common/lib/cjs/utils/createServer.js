"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createServer = void 0;
const core_1 = require("@tsed/core");
const di_1 = require("@tsed/di");
const listenServer_1 = require("./listenServer");
function createServer(injector, { token, type, port, server: get, listen }) {
    const { settings } = injector;
    const server = port !== false ? get() : null;
    injector.addProvider(token, {
        scope: di_1.ProviderScope.SINGLETON,
        useValue: server
    });
    injector.invoke(token);
    if (server) {
        const hostInfo = (0, core_1.getHostInfoFromPort)(type, port);
        return async () => {
            const url = `${hostInfo.protocol}://${hostInfo.address}:${port}`;
            injector.logger.debug(`Start server on ${url}`);
            await (listen ? listen(hostInfo) : (0, listenServer_1.listenServer)(server, hostInfo));
            const address = server.address();
            if (address && typeof address !== "string") {
                hostInfo.address = address.address;
                hostInfo.port = address.port;
            }
            injector.logger.info(`Listen server on ${hostInfo.toString()}`);
            settings.set(`${type}Port`, `${hostInfo.address}:${hostInfo.port}`);
            return server;
        };
    }
}
exports.createServer = createServer;
//# sourceMappingURL=createServer.js.map