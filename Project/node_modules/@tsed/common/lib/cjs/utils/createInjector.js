"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createInjector = void 0;
const core_1 = require("@tsed/core");
const di_1 = require("@tsed/di");
const logger_1 = require("@tsed/logger");
const PlatformConfiguration_1 = require("../config/services/PlatformConfiguration");
const Platform_1 = require("../services/Platform");
const PlatformAdapter_1 = require("../services/PlatformAdapter");
const PlatformApplication_1 = require("../services/PlatformApplication");
const PlatformHandler_1 = require("../services/PlatformHandler");
const PlatformRequest_1 = require("../services/PlatformRequest");
const PlatformResponse_1 = require("../services/PlatformResponse");
logger_1.$log.name = "TSED";
const DEFAULT_PROVIDERS = [
    { provide: PlatformHandler_1.PlatformHandler },
    { provide: PlatformResponse_1.PlatformResponse },
    { provide: PlatformRequest_1.PlatformRequest },
    { provide: PlatformApplication_1.PlatformApplication },
    { provide: Platform_1.Platform }
];
function createInjector({ adapter, settings = {} }) {
    const injector = new di_1.InjectorService();
    injector.addProvider(PlatformConfiguration_1.PlatformConfiguration);
    injector.settings = injector.invoke(PlatformConfiguration_1.PlatformConfiguration);
    injector.logger = logger_1.$log;
    injector.settings.set(settings);
    if (adapter) {
        injector.addProvider(PlatformAdapter_1.PlatformAdapter, {
            useClass: adapter
        });
    }
    injector.invoke(PlatformAdapter_1.PlatformAdapter);
    injector.alias(PlatformAdapter_1.PlatformAdapter, "PlatformAdapter");
    (0, di_1.setLoggerConfiguration)(injector);
    const instance = injector.get(PlatformAdapter_1.PlatformAdapter);
    instance.providers = [...DEFAULT_PROVIDERS, ...instance.providers];
    (0, core_1.toMap)(instance.providers, "provide").forEach((provider, token) => {
        injector.addProvider(token, provider);
    });
    injector.invoke(PlatformApplication_1.PlatformApplication);
    return injector;
}
exports.createInjector = createInjector;
//# sourceMappingURL=createInjector.js.map