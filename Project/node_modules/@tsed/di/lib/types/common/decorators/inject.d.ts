import type { InjectablePropertyOptions } from "../interfaces/InjectableProperties";
import { TokenProvider } from "../interfaces/TokenProvider";
export declare function injectProperty(target: any, propertyKey: string, options: Partial<InjectablePropertyOptions>): void;
/**
 * Inject a provider to another provider.
 *
 * Use this decorator to inject a custom provider on constructor parameter or property.
 *
 * ```typescript
 * @Injectable()
 * export class MyService {
 *   @Inject(CONNECTION)
 *   connection: CONNECTION;
 * }
 * ```
 *
 * @param token A token provider or token provider group
 * @param onGet Use the given name method to inject
 * @returns {Function}
 * @decorator
 */
export declare function Inject(token?: TokenProvider | (() => TokenProvider), onGet?: (bean: any) => any): Function;
