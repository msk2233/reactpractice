import { AsyncLocalStorage, AsyncResource } from "async_hooks";
const storage = new AsyncLocalStorage();
export function getAsyncStore() {
    return storage;
}
export function useContextRef() {
    return getAsyncStore().getStore();
}
export function getContext() {
    return useContextRef()?.current;
}
export async function runInContext(ctx, cb, injector) {
    const ref = useContextRef();
    if (ref) {
        ctx && setContext(ctx);
        return cb();
    }
    else {
        injector = ctx?.injector || injector;
        cb = (await injector?.alterAsync("$alterRunInContext", cb)) || cb;
        return storage.run({ current: ctx }, cb);
    }
}
export function setContext(ctx) {
    const ref = useContextRef();
    if (ref && !ref.current) {
        ref.current = ctx;
    }
}
export function bindContext(cb) {
    return AsyncResource.bind(cb);
}
//# sourceMappingURL=asyncHookContext.js.map