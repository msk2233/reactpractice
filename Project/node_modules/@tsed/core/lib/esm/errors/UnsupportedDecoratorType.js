import { decoratorTypeOf } from "../utils/decorators/decoratorTypeOf.js";
import { classOf } from "../utils/objects/classOf.js";
import { nameOf } from "../utils/objects/nameOf.js";
export class UnsupportedDecoratorType extends Error {
    name;
    constructor(decorator, args) {
        super(UnsupportedDecoratorType.buildMessage(decorator, args));
    }
    static buildMessage(decorator, args) {
        const [target, propertyKey, index] = args;
        const bindingType = decoratorTypeOf(args);
        const shortBinding = bindingType.split("/")[0];
        const param = shortBinding === "parameter" ? ".[" + index + "]" : "";
        const cstr = shortBinding === "parameter" ? ".constructor" : "";
        const method = propertyKey ? "." + propertyKey : cstr;
        const path = nameOf(classOf(target)) + method + param;
        return `${decorator.name} cannot be used as ${bindingType} decorator on ${path}`;
    }
}
//# sourceMappingURL=UnsupportedDecoratorType.js.map