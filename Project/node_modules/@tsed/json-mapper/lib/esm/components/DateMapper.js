import { __decorate } from "tslib";
import { isBoolean } from "@tsed/core";
import { JsonMapper } from "../decorators/jsonMapper.js";
/**
 * Mapper for `Date` type.
 * @jsonmapper
 * @component
 */
let DateMapper = class DateMapper {
    deserialize(data) {
        // don't convert unexpected data. In normal case, Ajv reject unexpected data.
        // But by default, we have to skip data deserialization and let user to apply
        // the right mapping
        if (isBoolean(data) || data === null || data === undefined) {
            return data;
        }
        return new Date(data);
    }
    serialize(object) {
        return object ? new Date(object).toISOString() : object;
    }
};
DateMapper = __decorate([
    JsonMapper(Date)
], DateMapper);
export { DateMapper };
//# sourceMappingURL=DateMapper.js.map