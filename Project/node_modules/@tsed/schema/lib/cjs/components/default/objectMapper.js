"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.objectMapper = void 0;
const core_1 = require("@tsed/core");
const alterIgnore_1 = require("../../hooks/alterIgnore");
const JsonSchemaMapperContainer_1 = require("../../registries/JsonSchemaMapperContainer");
const mapNullableType_1 = require("../../utils/mapNullableType");
/**
 * Serialize Any object to a json schema
 * @param input
 * @param options
 * @ignore
 */
function objectMapper(input, options) {
    const { specType, operationIdFormatter, root, components, genericTypes, nestedGenerics, useAlias, genericLabels, ...ctx } = options;
    return Object.entries(input).reduce((obj, [key, value]) => {
        if (options.withIgnoredProps !== false && !(0, alterIgnore_1.alterIgnore)(value, ctx)) {
            const opts = {
                ...options,
                groups: input?.$forwardGroups || value?.$forwardGroups ? options.groups : undefined
            };
            // remove groups to avoid bad schema generation over children models
            obj[key] = (0, JsonSchemaMapperContainer_1.execMapper)("item", [value], opts);
            obj[key] = (0, mapNullableType_1.mapNullableType)(obj[key], value, opts);
        }
        return obj;
    }, (0, core_1.isArray)(input) ? [] : {});
}
exports.objectMapper = objectMapper;
(0, JsonSchemaMapperContainer_1.registerJsonSchemaMapper)("object", objectMapper);
//# sourceMappingURL=objectMapper.js.map