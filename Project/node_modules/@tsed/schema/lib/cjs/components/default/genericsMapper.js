"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.genericsMapper = void 0;
const core_1 = require("@tsed/core");
const JsonEntityStore_1 = require("../../domain/JsonEntityStore");
const JsonSchemaMapperContainer_1 = require("../../registries/JsonSchemaMapperContainer");
const generics_1 = require("../../utils/generics");
const getJsonType_1 = require("../../utils/getJsonType");
/**
 * @ignore
 */
function genericsMapper(obj, options) {
    const { generics } = options;
    if (generics && obj.$ref) {
        if (generics.has(obj.$ref)) {
            let type = generics.get(obj.$ref);
            if ((0, core_1.isPrimitiveClass)(type)) {
                return {
                    type: (0, getJsonType_1.getJsonType)(type)
                };
            }
            if (type === Date) {
                return {
                    type: "string",
                    format: "date-time"
                };
            }
            if (type.toJSON) {
                return type.toJSON({
                    ...options,
                    generics: undefined
                });
            }
            if (type === Object) {
                return {
                    type: "object"
                };
            }
            if ((0, core_1.isClass)(type)) {
                const model = {
                    class: type
                };
                if (options.nestedGenerics.length === 0) {
                    return (0, JsonSchemaMapperContainer_1.execMapper)("class", [model], {
                        ...options,
                        generics: undefined
                    });
                }
                const store = JsonEntityStore_1.JsonEntityStore.from(model.class);
                return (0, JsonSchemaMapperContainer_1.execMapper)("schema", [store.schema], {
                    ...options,
                    ...(0, generics_1.popGenerics)(options),
                    root: false
                });
            }
        }
    }
    return obj;
}
exports.genericsMapper = genericsMapper;
(0, JsonSchemaMapperContainer_1.registerJsonSchemaMapper)("generics", genericsMapper);
//# sourceMappingURL=genericsMapper.js.map