"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mapOpenSpec = void 0;
const core_1 = require("@tsed/core");
const getSpecType_1 = require("./getSpecType");
const mapOpenSpec2_1 = require("./mapOpenSpec2");
const SpecTypes_1 = require("../domain/SpecTypes");
const mapOpenSpec3_1 = require("./mapOpenSpec3");
const mergeSpec_1 = require("./mergeSpec");
/**
 * @ignore
 * @param spec
 * @param fileSpec
 * @param version
 * @param acceptMimes
 * @param specVersion
 */
function mapOpenSpec(spec, { fileSpec, acceptMimes, specVersion, version }) {
    specVersion = specVersion || (0, core_1.getValue)(spec, "openapi", (0, core_1.getValue)(spec, "swagger", "2.0"));
    const options = {
        specVersion,
        acceptMimes
    };
    switch ((0, getSpecType_1.getSpecType)(specVersion)) {
        case SpecTypes_1.SpecTypes.OPENAPI:
            spec = (0, mapOpenSpec3_1.mapOpenSpec3)(spec, options);
            fileSpec = fileSpec ? (0, mapOpenSpec3_1.mapOpenSpec3)(fileSpec, options) : fileSpec;
            break;
        default:
        case SpecTypes_1.SpecTypes.SWAGGER:
            spec = (0, mapOpenSpec2_1.mapOpenSpec2)(spec, options);
            fileSpec = fileSpec ? (0, mapOpenSpec2_1.mapOpenSpec2)(fileSpec, options) : fileSpec;
            break;
    }
    spec = (0, mergeSpec_1.mergeSpec)(spec, fileSpec);
    (0, core_1.setValue)(spec, "info.title", (0, core_1.getValue)(spec, "info.title", "Api documentation"));
    (0, core_1.setValue)(spec, "info.version", (0, core_1.getValue)(spec, "info.version", version));
    return spec;
}
exports.mapOpenSpec = mapOpenSpec;
//# sourceMappingURL=mapOpenSpec.js.map