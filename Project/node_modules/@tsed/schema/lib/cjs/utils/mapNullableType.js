"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mapNullableType = void 0;
const core_1 = require("@tsed/core");
const SpecTypes_1 = require("../domain/SpecTypes");
function hasNullable(obj) {
    return obj.oneOf.find((o) => o.type === "null");
}
function mapNullableType(obj, schema, options) {
    if (!schema?.isNullable) {
        return obj;
    }
    let types = [].concat(obj.type).filter(Boolean);
    switch (options.specType) {
        default:
        case SpecTypes_1.SpecTypes.JSON:
            if (!obj.discriminator) {
                if (obj.oneOf) {
                    if (!hasNullable(obj)) {
                        obj.oneOf.unshift({
                            type: "null"
                        });
                    }
                }
                else {
                    obj.type = (0, core_1.uniq)(["null", ...types]);
                }
            }
            break;
        case SpecTypes_1.SpecTypes.OPENAPI:
            obj.nullable = true;
            if (!obj.oneOf) {
                if (types.length > 1) {
                    obj.oneOf = types.map((type) => ({ type }));
                    delete obj.type;
                }
                else {
                    obj.type = types[0];
                }
            }
            break;
    }
    return obj;
}
exports.mapNullableType = mapNullableType;
//# sourceMappingURL=mapNullableType.js.map