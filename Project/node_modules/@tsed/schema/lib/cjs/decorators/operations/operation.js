"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Operation = void 0;
const OperationVerbs_1 = require("../../constants/OperationVerbs");
const DecoratorContext_1 = require("../../domain/DecoratorContext");
const mapOperationOptions_1 = require("../../utils/mapOperationOptions");
class OperationDecoratorContext extends DecoratorContext_1.DecoratorContext {
    methods = ["name", "description", "summary", "method", "id", "use", "useAfter", "useBefore"];
    beforeInit() {
        const path = this.get("path");
        const method = OperationVerbs_1.OperationVerbs[this.get("method")] || OperationVerbs_1.OperationVerbs.CUSTOM;
        path && this.entity.operation.addOperationPath(method, path);
    }
    onMapKey(key, value) {
        switch (key) {
            case "name":
            case "id":
                this.entity.operation.operationId(value);
                return;
            case "summary":
                this.entity.operation.summary(value);
                return;
            case "description":
                this.entity.operation.description(value);
                return;
            case "use":
                this.entity.use(value);
                return;
            case "useAfter":
                this.entity.after(value);
                return;
            case "useBefore":
                this.entity.before(value);
                return;
        }
        return super.onMapKey(key, value);
    }
}
function Operation(...args) {
    const routeOptions = (0, mapOperationOptions_1.mapOperationOptions)(args);
    const context = new OperationDecoratorContext(routeOptions);
    return context.build();
}
exports.Operation = Operation;
//# sourceMappingURL=operation.js.map