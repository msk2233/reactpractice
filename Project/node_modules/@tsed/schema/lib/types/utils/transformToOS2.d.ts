import { OpenSpec2, OpenSpec3, OS3Operation } from "@tsed/openspec";
export declare function transformSecurity(securitySchemes: any): {};
export declare function transformInformation(server: any): {
    host: string | undefined;
    basePath: string;
    schemes: string[] | undefined;
};
export declare class Converter {
    private spec;
    constructor(spec: Partial<OpenSpec3>);
    convertInfos(): {};
    resolveReference(base: any, obj: any, shouldClone: boolean): any;
    convert(): any;
    convertOperations(paths: any, spec: any): any;
    convertOperationParameters(operation: OS3Operation): void;
    convertParameters(obj: any): void;
    copySchemaProperties(obj: any, props: any[]): void;
    copySchemaXProperties(obj: Record<string, any>): void;
    convertResponses(operation: Record<string, any>): void;
    convertSchema(def: any, operationDirection?: any): void;
    convertSchemas(): void;
    convertDiscriminatorMapping(mapping: any): void;
    convertSecurityDefinitions(): void;
}
export declare function transformToOS2(spec: any): Partial<OpenSpec2>;
