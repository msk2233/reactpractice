import { Type } from "@tsed/core";
import { JsonEntityStore } from "../domain/JsonEntityStore";
import { JsonClassStore } from "../domain/JsonClassStore";
import { JsonPropertyStore } from "../domain/JsonPropertyStore";
import { JsonParameterStore } from "../domain/JsonParameterStore";
import { JsonMethodStore } from "../domain/JsonMethodStore";
/**
 * Get entity store from decorator args
 * @param target
 */
export declare function getJsonEntityStore<T extends JsonClassStore = JsonClassStore>(target: Type<any>): T;
export declare function getJsonEntityStore<T extends JsonPropertyStore = JsonPropertyStore>(target: Type<any> | any, propertyKey: string | symbol): T;
export declare function getJsonEntityStore<T extends JsonParameterStore = JsonParameterStore>(target: Type<any> | any, propertyKey: string | symbol, index: number): T;
export declare function getJsonEntityStore<T extends JsonMethodStore = JsonMethodStore>(target: Type<any> | any, propertyKey: string | symbol, descriptor: PropertyDescriptor): T;
export declare function getJsonEntityStore<T extends JsonEntityStore = JsonEntityStore>(...args: any[]): T;
