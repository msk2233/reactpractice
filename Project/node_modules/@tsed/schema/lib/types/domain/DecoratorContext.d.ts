import { DecoratorParameters, DecoratorTypes } from "@tsed/core";
import { JsonEntityStore } from "./JsonEntityStore";
/**
 * @ignore
 */
export interface DecoratorActionHandler {
    (ctx: Map<string, any>): void;
}
/**
 * @ignore
 */
export declare abstract class DecoratorContext<T = any> extends Map<string, any> {
    readonly methods: string[];
    protected decoratorType: DecoratorTypes;
    protected entity: JsonEntityStore;
    protected actions: DecoratorActionHandler[];
    constructor(opts?: any);
    addAction(cb: DecoratorActionHandler): this;
    build(): T;
    toObject(): any;
    getMergedKey(key: string, defaultValue: any): any;
    protected bind(args: DecoratorParameters, decorator: any): void;
    protected onInit(args: DecoratorParameters, decorator: any): void;
    protected onMapKey(key: string, value: any): void;
    protected runActions(): this;
    protected beforeInit(): void;
    protected afterInit(): void;
}
