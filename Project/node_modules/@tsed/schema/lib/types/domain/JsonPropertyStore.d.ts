import { Type } from "@tsed/core";
import { JsonEntityStore } from "./JsonEntityStore";
import type { JsonClassStore } from "./JsonClassStore";
export declare class JsonPropertyStore extends JsonEntityStore {
    readonly parent: JsonClassStore;
    /**
     * Return the required state.
     * @returns {boolean}
     */
    get required(): boolean;
    /**
     * Change the state of the required data.
     * @param value
     */
    set required(value: boolean);
    get allowedRequiredValues(): any[];
    discriminatorKey(): this;
    isDiscriminatorKey(): boolean;
    /**
     * Check precondition between value, required and allowedRequiredValues to know if the entity is required.
     * @param value
     * @returns {boolean}
     */
    isRequired(value: any): boolean;
    protected build(): void;
    static get(target: Type<any>, propertyKey: string | symbol): JsonPropertyStore;
}
/**
 * @alias JsonPropertyStore
 */
export type PropertyMetadata = JsonPropertyStore;
export declare const PropertyMetadata: typeof JsonPropertyStore;
