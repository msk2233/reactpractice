"use strict";
var PassportMiddleware_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.PassportMiddleware = void 0;
const tslib_1 = require("tslib");
const di_1 = require("@tsed/di");
const platform_middlewares_1 = require("@tsed/platform-middlewares");
const common_1 = require("@tsed/common");
const ProtocolsService_1 = require("../services/ProtocolsService");
const getProtocolsFromRequest_1 = require("../utils/getProtocolsFromRequest");
let PassportMiddleware = PassportMiddleware_1 = class PassportMiddleware {
    protocolsService;
    shouldSkip(ctx) {
        const request = ctx.getRequest();
        return request.user && request.isAuthenticated();
    }
    async use(ctx) {
        const endpoint = ctx.endpoint;
        const request = ctx.getRequest();
        if (this.shouldSkip(ctx)) {
            return;
        }
        const { options, protocol, method, originalUrl = true } = endpoint.store.get(PassportMiddleware_1);
        const protocols = (0, getProtocolsFromRequest_1.getProtocolsFromRequest)(request, protocol, this.protocolsService.getProtocolsNames());
        if (originalUrl) {
            request.url = request.originalUrl;
        }
        await (method === "authenticate"
            ? this.protocolsService.authenticate(protocols, options, ctx)
            : this.protocolsService.authorize(protocols, options, ctx));
    }
};
tslib_1.__decorate([
    (0, di_1.Inject)(ProtocolsService_1.ProtocolsService),
    tslib_1.__metadata("design:type", ProtocolsService_1.ProtocolsService)
], PassportMiddleware.prototype, "protocolsService", void 0);
tslib_1.__decorate([
    tslib_1.__param(0, (0, common_1.Context)()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", Promise)
], PassportMiddleware.prototype, "use", null);
PassportMiddleware = PassportMiddleware_1 = tslib_1.__decorate([
    (0, platform_middlewares_1.Middleware)()
], PassportMiddleware);
exports.PassportMiddleware = PassportMiddleware;
//# sourceMappingURL=PassportMiddleware.js.map