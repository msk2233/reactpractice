"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PassportModule = void 0;
const tslib_1 = require("tslib");
const common_1 = require("@tsed/common");
const passport_1 = tslib_1.__importDefault(require("passport"));
const PassportSerializerService_1 = require("./services/PassportSerializerService");
const ProtocolsService_1 = require("./services/ProtocolsService");
/**
 * @ignore
 */
let PassportModule = class PassportModule {
    app;
    protocolsService;
    passportSerializer;
    userProperty;
    pauseStream;
    disableSession;
    platformName;
    logger;
    constructor(app, protocolsService, passportSerializer) {
        this.app = app;
        this.protocolsService = protocolsService;
        this.passportSerializer = passportSerializer;
    }
    async $onInit() {
        passport_1.default.serializeUser(this.passportSerializer.serialize.bind(this.passportSerializer));
        passport_1.default.deserializeUser(this.passportSerializer.deserialize.bind(this.passportSerializer));
        const promises = this.protocolsService.getProtocols().map((provider) => this.protocolsService.invoke(provider));
        await Promise.all(promises);
        return undefined;
    }
    $beforeRoutesInit() {
        const { userProperty, pauseStream } = this;
        switch (this.platformName) {
            case "express":
                this.app.use(passport_1.default.initialize({ userProperty }));
                !this.disableSession && this.app.use(passport_1.default.session({ pauseStream }));
                return;
            default:
                this.logger.warn(`Platform "${this.platformName}" not supported by @tsed/passport`);
        }
    }
};
tslib_1.__decorate([
    (0, common_1.Constant)("passport.userProperty"),
    tslib_1.__metadata("design:type", String)
], PassportModule.prototype, "userProperty", void 0);
tslib_1.__decorate([
    (0, common_1.Constant)("passport.pauseStream"),
    tslib_1.__metadata("design:type", Boolean)
], PassportModule.prototype, "pauseStream", void 0);
tslib_1.__decorate([
    (0, common_1.Constant)("passport.disableSession", false),
    tslib_1.__metadata("design:type", Boolean)
], PassportModule.prototype, "disableSession", void 0);
tslib_1.__decorate([
    (0, common_1.Constant)("PLATFORM_NAME"),
    tslib_1.__metadata("design:type", String)
], PassportModule.prototype, "platformName", void 0);
tslib_1.__decorate([
    (0, common_1.Inject)(),
    tslib_1.__metadata("design:type", common_1.Logger)
], PassportModule.prototype, "logger", void 0);
PassportModule = tslib_1.__decorate([
    (0, common_1.Module)({
        scope: common_1.ProviderScope.SINGLETON
    }),
    tslib_1.__metadata("design:paramtypes", [common_1.PlatformApplication,
        ProtocolsService_1.ProtocolsService,
        PassportSerializerService_1.PassportSerializerService])
], PassportModule);
exports.PassportModule = PassportModule;
//# sourceMappingURL=PassportModule.js.map