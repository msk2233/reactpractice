Here's an example of how you can organize your code in a folder structure with `index.ts` and `app.ts`:

*folder structure*
```
src
├── components
│   ├── BasicDetails.tsx
│   ├── EducationDetails.tsx
│   ├── Preferences.tsx
│   └── ...
├── schema
│   └── index.ts
├── utils
│   └── ...
├── app.ts
├── index.ts
└── ...
```
*schema/index.ts*
```
import * as Yup from 'yup';

interface BasicDetails {
  name: string;
  email: string;
}

interface EducationDetails {
  degree: string;
  university: string;
}

interface Preferences {
  interests: string;
}

const schema: {
  step1: Yup.SchemaOf<BasicDetails>;
  step2: Yup.SchemaOf<EducationDetails>;
  step3: Yup.SchemaOf<Preferences>;
} = {
  step1: Yup.object().shape({
    name: Yup.string().required('Name is required'),
    email: Yup.string().email('Invalid email').required('Email is required'),
  }),
  step2: Yup.object().shape({
    degree: Yup.string().required('Degree is required'),
    university: Yup.string().required('University is required'),
  }),
  step3: Yup.object().shape({
    interests: Yup.string().required('Interests are required'),
  }),
};

export default schema;
```
*components/BasicDetails.tsx*
```
import { useForm } from 'react-hook-form';
import { schema } from '../schema';

const BasicDetails = () => {
  const { register, handleSubmit, errors } = useForm({
    schema: schema.step1,
  });

  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <TextField
        label="Name"
        {...register('name')}
        error={errors.name ? true : false}
      />
      <TextField
        label="Email"
        {...register('email')}
        error={errors.email ? true : false}
      />
      <Button type="submit">Next</Button>
    </form>
  );
};

export default BasicDetails;
```
*app.ts*
```
import React from 'react';
import ReactDOM from 'react-dom';
import BasicDetails from './components/BasicDetails';

const App = () => {
  return (
    <div>
      <BasicDetails />
    </div>
  );
};

ReactDOM.render(<App />, document.getElementById('root'));
```
*index.ts*
```
import React from 'react';
import ReactDOM from 'react-dom';
import App from './app';

ReactDOM.render(<App />, document.getElementById('root'));
```
This structure keeps your schema definitions separate from your components and utils, and allows you to import and use them as needed. The `app.ts` file contains the main application component, and the `index.ts` file is the entry point for the application.
