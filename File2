import React, { useEffect, useState } from 'react';
import { NavigateFunction, useNavigate,useSearchParams} from "react-router-dom";
import BasicForm from './components/BasicDetails'
import EducationForm from './components/EducationDetails'
import WorkExpForm from './components/WorkExp'
import TechlanForm from './components/Tech_Lan'
import PreferenceForm from './components/Preferences'
import {formdata} from './services/interfaces'
import {BasicDetail_initials} from './services/constValues'
import { BasicDetail_interface } from './services/interfaces';
import { EducationDetail_initials } from './services/constValues';
import { EducationDetails } from './services/interfaces';
import { LanTech_interface } from './services/interfaces';
import { LanTech_details } from './services/constValues';
import { Preferance_interface } from './services/interfaces';
import { Preferance_initials } from './services/constValues';
import {WorkExp_details} from './services/constValues';
import { WorkExp_interface } from './services/interfaces';
import {Form} from './services/constValues'
import { addUser, initDB ,getUserbyid,updateUser} from './db';



const MultiStepForm: React.FC = () => {
  const Navigate:NavigateFunction = useNavigate();
  const [searchParams] = useSearchParams();
  const idForupdate:number | null = Number(searchParams.get('id'));
  const [step, setStep] = useState(1);
  let data1:{};
  useEffect(() => {
    (async () => {
      if (idForupdate == null) {
        data1={};
      }
      else{
        await initDB();
       const userdata:formdata =  await getUserbyid(idForupdate) as formdata;
       data1=userdata;
      }
    })();
  }, []);
  
  const [formData, setFormData] = useState<formdata>(data1);
  const handleNext = (data: formdata) => {
    setFormData({...formData,...data})
    
    setStep((prev=> prev+1))
  };

  const handlePrevious = (data:formdata) => {
  setFormData({...formData,...data})
  setStep(prev => prev - 1);
  }

  const handleFinalSubmit =async (data:formdata) => {
    setFormData({...formData, ...data})
    const finalData:formdata = formData as formdata;
    await initDB();
    if (idForupdate == null) {   
      await addUser(finalData);
      alert('Form Submitted!');
    }
    else{
      await updateUser(finalData)
      alert('updated!');
    }
    Navigate('/')
  };
console.log(formData);

  return (
    <>
      {step === 1 && <BasicForm onNext={handleNext} initialValues={formData} />}
      {step === 2 && <EducationForm onNext={handleNext} initialValues={formData} onPrev={handlePrevious} />}
       {step === 3 && <TechlanForm initialValues={formData} onPrev={handlePrevious} onNext={handleNext} />}
      {step === 4 && <WorkExpForm initialValues={formData} onNext={handleNext} onPrev={handlePrevious} />} 
      {step === 5 && <PreferenceForm initialValues={formData} onPrev={handlePrevious} onSubmit={handleFinalSubmit} />} 
    </>

  );
};

export default MultiStepForm;
