import React, { useEffect, useState } from 'react';
import { NavigateFunction, useNavigate,useSearchParams} from "react-router-dom";
import BasicForm from './components/BasicDetails'
import EducationForm from './components/EducationDetails'
import WorkExpForm from './components/WorkExp'
import ReferenceForm from './components/Reference'
import TechlanForm from './components/Tech_Lan'
import PreferenceForm from './components/Preferences'
import {formdata} from './services/interfaces'
import { addUser, initDB ,getUserbyid,updateUser} from './db';

const MultiStepForm: React.FC = () => {
  const Navigate:NavigateFunction = useNavigate();
  const [searchParams] = useSearchParams();
  const idForUpdate:number | null = Number(searchParams.get('id'));
  const [step, setStep] = useState(1);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    (async () => {
      await initDB();
      if (idForUpdate) {
        const userData: formdata = await getUserbyid(idForUpdate) as formdata;
        setFormData(userData);
      }
      setLoading(false);
    })();
  }, [idForUpdate]);
  
  const [formData, setFormData] = useState<formdata>({});
  const handleNext = (data: formdata) => {
    setFormData({...formData,...data})
    setStep((prev=> prev+1))
  };

  const handlePrevious = (data:formdata) => {
  setFormData({...formData,...data})
  setStep(prev => prev - 1);
  }

  const handleFinalSubmit =async (data:formdata) => {
    const finalData = { ...formData, ...data };

    if (idForUpdate == null) {
      await addUser(finalData);
      alert('Form Submitted!');
    } else {
      await updateUser(finalData);
      alert('Updated!');
    }
    Navigate('/');
  };

  return (
    <>
      {step === 1 && <BasicForm onNext={handleNext} initialValues={formData} />}
      {step === 2 && <EducationForm onNext={handleNext} initialValues={formData} onPrev={handlePrevious} />}
       {step === 3 && <TechlanForm initialValues={formData} onPrev={handlePrevious} onNext={handleNext} />}
      {step === 4 && <WorkExpForm initialValues={formData} onNext={handleNext} onPrev={handlePrevious} />} 
      {step === 5 && <ReferenceForm initialValues={formData} onNext={handleNext} onPrev={handlePrevious} />} 
      {step === 6 && <PreferenceForm initialValues={formData} onPrev={handlePrevious} onSubmit={handleFinalSubmit} />} 
    </>

  );
};

export default MultiStepForm;
