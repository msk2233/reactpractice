import * as React from "react";
import { useForm, SubmitHandler, Controller } from "react-hook-form";
import { useState, useEffect } from "react";
import Grid from "@mui/material/Grid";
import Typography from "@mui/material/Typography";
import TextField from "@mui/material/TextField";
import Box from "@mui/material/Box";
import Paper from "@mui/material/Paper";
import InputLabel from "@mui/material/InputLabel";
import MenuItem from "@mui/material/MenuItem";
import FormControl from "@mui/material/FormControl";
import Select from "@mui/material/Select";
import Button from "@mui/material/Button";
import { states } from '../services/constValues';
import { BasicDetail_interface } from "../services/interfaces";
import { addUser, initDB, getUserbyid } from '../db';

interface BasicProps {
  onNext: (data: BasicDetail_interface) => void;
  initialValues: BasicDetail_interface;
}

const Step1: React.FC<BasicProps> = ({ onNext, initialValues }) => {
  const [dataaaa, setdata] = useState<BasicDetail_interface>({});

  const getData = async () => {
    await initDB();
    const userdata: BasicDetail_interface = await getUserbyid(1) as BasicDetail_interface;
    const Data = {
      fname: userdata.fname,
      lname: userdata.lname,
      designation: userdata.designation,
      add1: userdata.add1,
      add2: userdata.add2,
      email: userdata.email,
      phno: userdata.phno,
      city: userdata.city,
      state: userdata.state,
      gender: userdata.gender,
      dob: userdata.dob
    };

    setdata(Data);
  }

  useEffect(() => {
    (async () => {
      await getData();
    })();
  }, []);

  const { register, handleSubmit, control, reset, formState: { errors } } = useForm<BasicDetail_interface>({
    defaultValues: initialValues,
  });

  useEffect(() => {
    reset(dataaaa);
  }, [dataaaa, reset]);

  const todayDate = new Date().toISOString().split("T")[0];
  const onSubmit: SubmitHandler<BasicDetail_interface> = data => {
    onNext(data);
  };

  return (
    <React.Fragment>
      <Paper elevation={3} sx={{ marginRight: "15%", marginLeft: "15%" }}>
        <Box component="form" onSubmit={handleSubmit(onSubmit)} sx={{ padding: 5 }}>
          <Typography variant="h6" gutterBottom sx={{ paddingBottom: 5 }}>
            BASIC DETAILS
          </Typography>
          <Grid container spacing={3}>
            <Grid item xs={12} sm={2}>
              <InputLabel
                sx={{
                  display: "flex",
                  justifyContent: "center",
                  fontWeight: 700
                }}
              >
                First Name
              </InputLabel>
            </Grid>
            <Grid item xs={12} sm={4}>
              <Controller
                control={control}
                name="fname"
                rules={{ required: "First name is required", pattern: { value: /^[a-zA-Z]+$/, message: "Invalid input" } }}
                render={({ field }) => (
                  <TextField
                    {...field}
                    fullWidth
                    sx={{ maxWidth: 600 }}
                    label="First Name"
                    margin="dense"
                    error={!!errors.fname}
                    helperText={errors.fname ? errors.fname.message : null}
                  />
                )}
              />
            </Grid>
            <Grid item xs={12} sm={2}>
              <InputLabel
                sx={{
                  display: "flex",
                  justifyContent: "center",
                  fontWeight: 700
                }}
              >
                Last Name
              </InputLabel>
            </Grid>
            <Grid item xs={12} sm={4}>
              <Controller
                control={control}
                name="lname"
                rules={{ required: "Last name is required", pattern: { value: /^[a-zA-Z]+$/, message: "Invalid input" } }}
                render={({ field }) => (
                  <TextField
                    {...field}
                    fullWidth
                    sx={{ maxWidth: 600 }}
                    label="Last Name"
                    margin="dense"
                    error={!!errors.lname}
                    helperText={errors.lname ? errors.lname.message : null}
                  />
                )}
              />
            </Grid>
            <Grid item xs={12} sm={2}>
              <InputLabel
                sx={{
                  display: "flex",
                  justifyContent: "center",
                  fontWeight: 700
                }}
              >
                Designation
              </InputLabel>
            </Grid>
            <Grid item xs={12} sm={4}>
              <FormControl fullWidth size="small">
                <TextField
                  {...register("designation", { required: "Designation is required" })}
                  id="Designation"
                  label="Designation"
                  error={!!errors.designation}
                  helperText={errors.designation ? errors.designation.message : null}
                />
              </FormControl>
            </Grid>
            <Grid item xs={12} sm={2} />
            <Grid item xs={12} sm={4} />
            <Grid item xs={12} sm={2}>
              <InputLabel
                sx={{
                  display: "flex",
                  justifyContent: "center",
                  fontWeight: 700
                }}
              >
                Address 1
              </InputLabel>
            </Grid>
            <Grid item xs={12} sm={4}>
              <FormControl fullWidth size="small">
                <TextField
                  id="add1"
                  {...register("add1", { required: "Address 1 is required" })}
                  label="plot no:123,down street,..."
                  error={!!errors.add1}
                  helperText={errors.add1 ? errors.add1.message : null}
                />
              </FormControl>
            </Grid>
            <Grid item xs={12} sm={2}>
              <InputLabel
                sx={{
                  display: "flex",
                  justifyContent: "center",
                  fontWeight: 700
                }}
              >
                Address 2
              </InputLabel>
            </Grid>
            <Grid item xs={12} sm={4}>
              <TextField
                id="add2"
                {...register("add2", { required: "Address 2 is required" })}
                label="plot no:567,war street,..."
                fullWidth
                error={!!errors.add2}
                helperText={errors.add2 ? errors.add2.message : null}
              />
            </Grid>
            {/*--------------------------mail phno --------------------------- */}
            <Grid item xs={12} sm={2}>
              <InputLabel
                sx={{
                  display: "flex",
                  justifyContent: "center",
                  fontWeight: 700
                }}
              >
                Email
              </InputLabel>
            </Grid>
            <Grid item xs={12} sm={4}>
              <FormControl fullWidth size="small">
                <TextField
                  type="email"
                  id="mail"
                  {...register("email", { required: "Email is required", pattern: { value: /^\S+@\S+\.\S+$/, message: "Enter a valid email address" } })}
                  label="abc@gmail.com"
